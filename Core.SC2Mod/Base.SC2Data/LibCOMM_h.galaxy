include "LibCOMI_h"

//--------------------------------------------------------------------------------------------------
// Library: COMMANDERS
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libCOMM_ge_CM_SoATargetingPhaseType_None = 0;
const int libCOMM_ge_CM_SoATargetingPhaseType_Location = 1;
const int libCOMM_ge_CM_SoATargetingPhaseType_Direction = 2;
const int libCOMM_ge_CM_ZeratulProphecyEventUnits_ZeratulUnit = 0;
const int libCOMM_ge_CM_ZeratulProphecyEventUnits_ArtifactUnit = 1;

// Constants
const int libCOMM_gv_cMC_SOATARGETCOUNTMAX = 5;
const string libCOMM_gv_warpGateTrainAbility = "WarpGateTrain";
const string libCOMM_gv_supplicantWarpTrainActualAbility = "WarpGateTrainSupplicantTrue";
const string libCOMM_gv_supplicantWarpTrainDummyUnitLink = "AlarakSupplicantWarpTrainDummy";
const string libCOMM_gv_supplicantWarpTrainCreatorUnitLink = "AlarakSupplicantWarpTrainCreator";
const string libCOMM_gv_supplicantWarpTrainActualUnitLink = "Supplicant";
const string libCOMM_gv_supplicantWarpTrainWarpPowerCheckBehaviorLink = "SupplicantWarpPowerCheck";
const string libCOMM_gv_supplicantWarpTrainWarpRefundBehaviorLink = "SupplicantCancelCheck";
const string libCOMM_gv_supplicantWarpTrainCreatorFinderBehaviorLink = "SupplicantCreatorCheck";
const string libCOMM_gv_supplicantWarpTrainCreatorWarpGateFinderBehaviorLink = "SupplicantCreatorWarpGateCheck";
const string libCOMM_gv_supplicantWarpTrainActualUnitBirthEventLink = "SupplicantBirth";
const string libCOMM_gv_supplicantWarpTrainActualUnitCancelEventLink = "SuplicantWarpCancel";
const string libCOMM_gv_cM_SupplicantWarpGateMarkerPrefix = "CM_SupplicantCreatorWarpGate";
const string libCOMM_gv_cM_AlarakLightningStrikes_Behavior = "AlarakLightningStrikes";
const string libCOMM_gv_cM_Alarak_SoulAbsorption_ImpactEffect = "AlarakSoulAbsorptionImpactDummy";
const string libCOMM_gv_cM_Alarak_SoulAbsorption_LaunchEffect = "AlarakSoulAbsorptionLaunchDummy";
const string libCOMM_gv_cM_Alarak_SoulAbsorption_ScoreTrackerEffect = "SoulAbsorptionMU";
const fixed libCOMM_gv_cM_Alarak_SoulAbsorption_FoodFactor = 20.0;
const fixed libCOMM_gv_cM_Alarak_EmpowerBaseDmgInc = 1.0;
const fixed libCOMM_gv_cM_Alarak_EmpowerBaseSpellDmgeIncPercent = 0.05;
const fixed libCOMM_gv_cM_Alarak_EmpowerDiminishingReturnsMultiplier = 0.5;
const fixed libCOMM_gv_cM_Alarak_EmpowerDiminishingReturnsSupplyThreshold = 100.0;
const fixed libCOMM_gv_cM_Alarak_EmpowerMaxPower = 200.0;
const string libCOMM_gv_cM_Alarak_EmpowerAuraTarget = "AlarakEmpowerTarget";
const string libCOMM_gv_cM_Alarak_EmpowerWorshiperTarget = "WorshipAlarak";
const string libCOMM_gv_cM_Alarak_EmpowerBehaviorCaster = "AlarakEmpowerDisplay";
const string libCOMM_gv_cM_Alarak_EmpowerAuraTargetPlayerFinalEffect = "AlarakEmpowerTargetPlayerFinal";
const string libCOMM_gv_cM_Alarak_EmpowerAuraTargetPlayerStartEffect = "AlarakEmpowerTargetPlayerStart";
const fixed libCOMM_gv_cMC_DehakaVOLearnReminderDelay = 60.0;
const string libCOMM_gv_cM_DehakaMutaliskReviveCooldownBehavior = "DehakaMutaliskTimerBehavior";
const string libCOMM_gv_cM_DehakaMutaliskReviveCooldownIndicator = "PrimalReconstitutionCooldownIndicator";
const string libCOMM_gv_c_DehakaConsumeCooldownLink = "Abil/DehakaConsume";
const string libCOMM_gv_c_DehakaConsumeAbil = "DehakaConsume";
const string libCOMM_gv_c_DehakaConsumeEffect = "DehakaConsumeImpactEatDamage";
const string libCOMM_gv_c_DehakaConsumeEffectTriggerEffect = "DehakaConsumeImpactEatDamageReal";
const string libCOMM_gv_c_DehakaConsumeBehaviorDisable = "DehakaConsumeDisableCommandCard";
const int libCOMM_gv_c_DehakaConsumeEffectHeroicEssenceAmount = 20;
const string libCOMM_gv_c_DehakaConsumeEffectHeroicLink = "DehakaConsumeEffectHeroic";
const string libCOMM_gv_c_DehakaConsumeEffectUserType = "XAC_DehakaConsumeEffects";
const string libCOMM_gv_c_DehakaConsumeEffectPsiExplodeWeaponDmgLink = "DehakaConsumeEffectPsionicDamage";
const int libCOMM_gv_cM_DehakaEssenceIndex = 17;
const int libCOMM_gv_cMC_FenixVOTransmissionProbablity = 50;
const fixed libCOMM_gv_cMC_FenixVOTransmissionTimerDelay = 60.0;
const int libCOMM_gv_cMC_Fenix_HeroIndex = 1;
const fixed libCOMM_gv_cM_Fenix_SuitSwapCooldown = 15.0;
const fixed libCOMM_gv_cM_Fenix_OfflineVitalRegenMultiplier = 1.2;
const int libCOMM_gv_cMC_Fenix_ChampionCount = 6;
const fixed libCOMM_gv_cMC_HornerVOBomberUseDelay = 15.0;
const fixed libCOMM_gv_cMC_HornerVOBomberReminderDelay = 300.0;
const string libCOMM_gv_cM_HornerStatUserType = "XAC_TheHornersStat";
const string libCOMM_gv_cM_HornerStatBonus = "MasteryHornerMSOBonusDisplayDummy";
const string libCOMM_gv_cM_HornerFactionUserType = "XAC_TheHornersFactions";
const string libCOMM_gv_cM_TalentKerriganMalignantCreepUpgrade = "KerriganCreepBonusesCoop";
const int libCOMM_gv_cMC_NovaUnitName_CountMax = 143;
const string libCOMM_gv_StukovInfestedWraithSnareBehavior = "SIWraithSnare";
const fixed libCOMM_gv_StukovInfestedWraithSnareBehavior2 = 1.0;
const fixed libCOMM_gv_StukovInfestedWraithSnareBehavior3 = 1.0;
const fixed libCOMM_gv_cMC_TychusVOTransportFlairCooldown = 30.0;
const fixed libCOMM_gv_cMC_TychusVOOutlawReviveReminderDelay = 120.0;
const fixed libCOMM_gv_cMC_TychusVOOutlawRecruitReminderDelay = 60.0;
const int libCOMM_gv_cUC_TYCHUS_MAX_SQUAD_SIZE = 5;
const int libCOMM_gv_cU_TychusMedivacMaxCharges = 3;
const string libCOMM_gv_cM_Tychus_UserTypeHeroList = "XAC_TechTychusSquad";
const string libCOMM_gv_cM_Tychus_OdinSummonEffect_Caller = "TychusCalldownOdinTargetedDummy";
const string libCOMM_gv_cM_Tychus_OdinSummonEffect_Called = "TychusCalldownOdinCreatePrecursor";
const string libCOMM_gv_cM_Tychus_OdinSummonEffect_Created = "TychusCalldownOdinApplyTimedLife";
const fixed libCOMM_gv_c_TychusSpecialistTrainingAuraCooldownFactor = 20.0;
const fixed libCOMM_gv_cMC_TychusVOTransportReminderDelay = 900.0;
const string libCOMM_gv_cM_Tychus_UserTypeHeroAbilTech = "XAC_TechTychusSquad";
const fixed libCOMM_gv_cM_Tychus_InitialTrainTime = 180.0;
const fixed libCOMM_gv_cM_Tychus_RechargeTrainTime = 240.0;
const fixed libCOMM_gv_cM_Tychus_RechargeTrainTimeMasteryReducePerLevel = 2.0;
const string libCOMM_gv_cM_MasteryVorazunDarkPylonRadiusPowerSourceNoMasteryLink = "DarkPylonPowerSource";
const string libCOMM_gv_cM_MasteryVorazunDarkPylonRadiusPowerSourceBaseString = "DarkPylonPowerSourceMasteryVorazunDarkPylonRadius";
const string libCOMM_gv_cM_MasteryVorazunDarkPylonRadiusUpgradeLink = "MasteryVorazunDarkPylonRadius";
const string libCOMM_gv_cM_MasteryVorazunDarkPylonRadiusActorLink = "DarkPylonCloakingField";
const int libCOMM_gv_cUC_ZERATUL_MAX_SELECTIONS = 4;
const int libCOMM_gv_cM_ZeratulProphecyArtifactFinalUniqueNumber = 3;

// Variable Declarations
int[5][3] libCOMM_gv_aF_TopbarButton;
bool libCOMM_gv_cM_SoAExitInstantly;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_SoATargetingChargesSpent;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_SoATargetingChargesTotal;
int libCOMM_gv_cM_SoATargetingUsageCount;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_SoATargetingPhase;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_SoATargetingTransitioning;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_SoATargetingUnrefundableStageEntered;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_SoATargetingAlreadyCanceled;
string[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_SoATargetingModel;
string[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_SoATargetingUnitType;
unit[libCOMM_gv_cMC_SOATARGETCOUNTMAX + 1][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_SoATargetingUnit;
actor[libCOMM_gv_cMC_SOATARGETCOUNTMAX + 1][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_SoATargetingActors;
string[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_SoATargetingBehavior;
string[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_SoATargetingActivateAbility;
abilcmd[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_SoATargetingExecuteCommand;
text[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_SoATargetingInstructionsPrimary;
text[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_SoATargetingInstructionsSecondary;
string[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_SoATargetingCooldown;
order[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_SoATargetingOrder;
unitgroup[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_SoATargetingDirectionGroup;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_SoATargetingCycling;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreArtanisKaraxSoADmg;
int libCOMM_gv_cU_GPAlarakGemClickCount;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cU_GPAlarakButton;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreAlarakDmg;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreAlarakHeal;
fixed libCOMM_gv_supplicantWarpTrainActualUnitCost;
abilcmd libCOMM_gv_supplicantWarpTrainActualCommand;
abilcmd libCOMM_gv_cM_AlarakLightningStrikes_SacrificeCmd;
unitgroup[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Alarak_EmpowerSlaves;
unitgroup[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Alarak_EmpowerWorshipers;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreArtanisAbsorb;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreArtanisAbsorbLast;
int libCOMM_gv_cM_DebugAbathurBiomassCollected;
int libCOMM_gv_cM_DebugAbathurBiomassLost;
int libCOMM_gv_cM_DebugAbathurBiomassDroppedNormal;
int libCOMM_gv_cM_DebugAbathurBiomassDroppedRefund;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreAbathurHeal;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreAbathurMonsterDmg;
int libCOMM_gv_cM_CurrentSpawn;
int libCOMM_gv_cM_MaxSpawn;
unitgroup libCOMM_gv_cM_CreepGroup;
timer libCOMM_gv_cM_CreepTimer;
int libCOMM_gv_cM_SpawnTime;
int libCOMM_gv_cM_Abathur_Enemy_Death_Create_Locusts_Random_Modifier;
timer libCOMM_gv_cM_DehakaVOLearnReminderTimer;
int libCOMM_gv_cM_DehakaVODehakaPlayer;
bool libCOMM_gv_cM_DehakaVOWurmStructureAlive;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreDehakaDmg;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreDehakaConsumeSupply;
unit[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_DehakaReviveFootprint;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_DehakaReviveEatUsed;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_DehakaReviveEatTextTag;
fixed libCOMM_gv_c_DehakaConsumeLifeCooldownFactor;
unitfilter libCOMM_gv_c_DehakaConsumeCooldownFilter;
abilcmd libCOMM_gv_dataDehakaLearnAbilCmdLink;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_DehakaBossBuildingBuilt_Glevig;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_DehakaBossBuildingBuilt_Murvar;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_DehakaBossBuildingBuilt_Dakrun;
fixed libCOMM_gv_cM_DehakaEatReviveTimerAdjustment;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_dehakaGlevigFirebreathAutocast;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_dehakaMurvarPukeAutocast;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_dehakaMurvarSpawnCreepersAutocast;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_DehakaLevelsMax;
string[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_DehakaVeterencyBehavior;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Dehaka_CurrentLevel;
int[21] libCOMM_gv_cM_DehakaNextLevelValueArray;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Dehaka_TotalEssence;
string libCOMM_gv_cM_Dehaka_EssenceAttribute;
bool libCOMM_gv_cM_DehakaLevelMaxMusicPlayed;
int libCOMM_gv_cM_DebugDehakaEssenceLost;
int libCOMM_gv_cM_DebugDehakaEssenceDroppedRefund;
int libCOMM_gv_cM_DebugDehakaEssenceDroppedNormal;
int libCOMM_gv_cM_DebugDehakaEssenceCollected;
bool[4][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_FenixVOTransmissionFirstPlay;
timer libCOMM_gv_cM_FenixVOTransmissionTimer;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_FenixVOTalandarRecalled;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreFenixChampionDmg;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreFenixSuitDmg;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_fenixAchievementCarrierAmount;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_fenixAchievementCarrierResearched;
unitgroup[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Fenix_HeroGroup;
unitgroup[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Fenix_DummyGroup;
string[4] libCOMM_gv_cM_Fenix_AbilCmdArray;
unit[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Fenix_ActiveHero;
string[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Fenix_ActiveHero_Abil;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Fenix_ActiveHero_Slot;
unit[4][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Fenix_Suits;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Fenix_OfflineHealthRegen;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Fenix_OfflineShieldRegen;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Fenix_OfflineEnergyRegen;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Fenix_KillCount;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Fenix_KilledSelf;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Fenix_SuicideLife;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Fenix_SuicideShield;
unitgroup libCOMM_gv_cM_Fenix_RalliedGroup;
fixed[libCOMM_gv_cMC_Fenix_ChampionCount + 1][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Fenix_ChampionRespawnTimer;
int[libCOMM_gv_cMC_Fenix_ChampionCount + 1][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Fenix_ChampionKills;
unit[libCOMM_gv_cMC_Fenix_ChampionCount + 1][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Fenix_ChampionUnit;
string[libCOMM_gv_cMC_Fenix_ChampionCount + 1] libCOMM_gv_cM_Fenix_ChampionUnitType;
string[libCOMM_gv_cMC_Fenix_ChampionCount + 1] libCOMM_gv_cM_Fenix_ChampionUnitReplaceType;
unit[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Fenix_ChampionStructure;
bool[libCOMM_gv_cMC_Fenix_ChampionCount + 1][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Fenix_ChampionAvailable;
unitgroup[libCOMM_gv_cMC_Fenix_ChampionCount + 1][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Fenix_ChampionVolunteerUnitGroup;
abilcmd[libCOMM_gv_cMC_Fenix_ChampionCount + 1] libCOMM_gv_cM_Fenix_ChampionMorphAbil;
point[libCOMM_gv_cMC_Fenix_ChampionCount + 1][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Fenix_ChampionDeathPosition;
string[libCOMM_gv_cMC_Fenix_ChampionCount + 1] libCOMM_gv_cM_Fenix_ChampionNetworkUpgrades;
string[libCOMM_gv_cMC_Fenix_ChampionCount + 1] libCOMM_gv_cM_Fenix_ChampionShellCountEffects;
string[libCOMM_gv_cMC_Fenix_ChampionCount + 1] libCOMM_gv_cM_Fenix_ChampionNetworkMaxCountDummy;
string[libCOMM_gv_cMC_Fenix_ChampionCount + 1] libCOMM_gv_cM_Fenix_ChampionNetworkStacksPerSupplyDummy;
string[libCOMM_gv_cMC_Fenix_ChampionCount + 1] libCOMM_gv_cM_Fenix_ChampionAvengingProtocolBehaviors;
int[libCOMM_gv_cMC_Fenix_ChampionCount + 1] libCOMM_gv_cM_Fenix_ChampionAvengingProtocolBuffStacks;
int[libCOMM_gv_cMC_Fenix_ChampionCount + 1] libCOMM_gv_cM_Fenix_ChampionAvengingProtocolBuffStackMaxCount;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_fenixWhirlwindAutocast;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_fenixShieldCapacitorAutocast;
int libCOMM_gv_cM_HornerVOHornerPlayer;
timer libCOMM_gv_cM_HornerVOBomberReminderTimer;
timer libCOMM_gv_cM_HornerVOBomberUseTimer;
bool libCOMM_gv_cM_HornerVOBomberBuilt;
bool libCOMM_gv_cM_HornerVOFleetOffCooldown;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreHornerMagMineDmg;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreHornerScrapResources;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_HornerAirFleet_Cost;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_miraFactionSupply;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_mattFactionSupply;
string libCOMM_gv_catalogAdditiveBonusPrefix;
unit libCOMM_gv_cM_Horner_TechLab;
unitgroup[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Horner_BomberPlatforms;
unitgroup[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Horner_BomberPlatforms_Ready;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Horner_BomberPlatforms_TotalCount;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Horner_BomberPlatforms_ReadyCount;
timer libCOMM_gv_cM_SoASuperChronoTimer;
int libCOMM_gv_cM_ZerglingRespawnCount;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreKerriganDmg;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_kerriganPsiStrikeFacing;
fixed libCOMM_gv_kerriganPsiStrikeEnergyCost;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cU_GPMengskEnergyRegenTrooperContainer;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cU_GPMengskEnergyRegenRoyalGuardContainer;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cU_GPMengskEnergyContainer;
bool libCOMM_gv_cM_MengskSnarkExecuted;
bool libCOMM_gv_cM_MengskEliteBuilt;
bool libCOMM_gv_cM_MengskArtilleryBuilt;
bool libCOMM_gv_cM_MengskTrooperEquipped;
timer libCOMM_gv_cM_MengskTransmissionTimerDirtyBomb;
timer libCOMM_gv_cM_MengskTransmissionTimerForcedConscription;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreMengskTrooperDamage;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreMengskRoyalGuardDamage;
bool libCOMM_gv_cM_Mengsk_CheckRoyalGuardSupply;
unitgroup libCOMM_gv_cM_Mengsk_XPHungryUnits;
unitgroup libCOMM_gv_cM_Mengsk_VeteranUnits;
unitgroup libCOMM_gv_cM_Mengsk_PropagandaUnits;
unitgroup libCOMM_gv_cM_Mengsk_ReturningWorkers;
unitgroup libCOMM_gv_cM_Mengsk_WeaponPickups;
unitgroup libCOMM_gv_cM_Mengsk_WeaponPickerUppers;
fixed libCOMM_gv_cM_Mengsk_ArtilleryExperimentalStrikeRange;
fixed libCOMM_gv_cM_Mengsk_EnergyRegenRoyalGuard;
fixed libCOMM_gv_cM_Mengsk_EnergyRegenTrooper;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreNovaDmg;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreNovaHeal;
int libCOMM_gv_cM_NovaUnitName_CountCurrentPosition;
text[libCOMM_gv_cMC_NovaUnitName_CountMax + 1] libCOMM_gv_cM_NovaUnitName_Text;
int libCOMM_gv_cM_NovaUnitName_CountStep;
unit[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_NovaGriffinTransportUnit;
unitgroup[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_NovaGriffinTransportUnitGroup;
unitgroup[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_NovaGriffinGroundUnitsTransportGroupAir;
unitgroup[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_NovaGriffinGroundUnitsTransportGroupGround;
point[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_NovaGriffinTranportLoadPoint;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_NovaGriffinBombingRunCost;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_novaBarrackBuilt;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_novaFactoryBuilt;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_novaStarportBuilt;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_NovaPsiStrikeFacing;
fixed libCOMM_gv_NovaPsiStrikeEnergyCost;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreRaynorHeal;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreRaynorHyperionDmg;
unitgroup libCOMM_gv_cM_PrestigeRaynor_AirUnits;
bool libCOMM_gv_cM_AbilityTransmission_StetelliteReminder_First;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreStetmannGaryDmg;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreStetmannOverload;
int libCOMM_gv_cU_StetmannMaxStetelliteCharges;
int libCOMM_gv_cM_Stetmann_StetelliteChargesLevel;
bool libCOMM_gv_cM_Stetmann_StetzoneChanged;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreStukovInfestedDmg;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreStukovMonstrosityDmg;
unit[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Stukov_InfestedStructure;
unitgroup[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Stukov_HordeGroup;
unitgroup[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Stukov_HordeCurrentWave;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Stukov_HordeCount;
unit[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Stukov_RallyTarget;
point[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Stukov_RallyPoint;
unit[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Stukov_RallyBeaconUnit;
unitgroup[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Stukov_BunkerGroup;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreSwannHeal;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreSwannDrillDmg;
unit[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_LaserDrillUnit;
unitgroup[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_LaserDrillUnitGroup;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_LaserDrillDistance;
region[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_laserDrillSoundRegion;
actor[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_laserDrillSoundRegionActor;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_laserDrillSoundRegionCreated;
region[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_laserDrillBFGSoundRegion;
actor[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_laserDrillBFGSoundRegionActor;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_laserDrillBFGSoundRegionCreated;
region[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_laserDrillNukeSoundRegion;
actor[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_laserDrillNukeSoundRegionActor;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_laserDrillNukeSoundRegionCreated;
string libCOMM_gv_tychusReviveCommand;
int libCOMM_gv_cM_TychusVOTychusPlayer;
timer libCOMM_gv_cM_TychusVOTransportFlairCooldownTimer;
timer libCOMM_gv_cM_TychusVOOutlawReviveReminderTimer;
timer libCOMM_gv_cM_TychusVOOutlawRecruitReminderTimer;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreTychusGrenadeDmg;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreTychusReaperBombDmg;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreTychusWarhoundTurretDmg;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreTychusFirebatOilDmg;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreTychusHERCImpactDuration;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreTychusMarauderHeal;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreTychusGhostDominatedDmg;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreTychusSpectrePulseDmg;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreTychusMedicHeal;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreTychusOdinDmg;
string libCOMM_gv_cM_Tychus_SharedAbil_ButtonBase;
unit[libCOMM_gv_cUC_TYCHUS_MAX_SQUAD_SIZE + 1] libCOMM_gv_cU_TychusSquadHeroes;
unit libCOMM_gv_cU_TychusSquadBar;
int libCOMM_gv_cU_TychusSquadContainer;
int libCOMM_gv_cU_TychusSquadTrainingProgressBar;
int[libCOMM_gv_cUC_TYCHUS_MAX_SQUAD_SIZE + 1] libCOMM_gv_cU_TychusSquadAvailabilityProgressBars;
int[libCOMM_gv_cUC_TYCHUS_MAX_SQUAD_SIZE + 1] libCOMM_gv_cU_TychusSquadUnitFrames;
int[libCOMM_gv_cUC_TYCHUS_MAX_SQUAD_SIZE + 1] libCOMM_gv_cU_TychusSquadUnitTargets;
int[libCOMM_gv_cUC_TYCHUS_MAX_SQUAD_SIZE + 1] libCOMM_gv_cU_TychusSquadEquipmentStructureTargets;
int[libCOMM_gv_cUC_TYCHUS_MAX_SQUAD_SIZE + 1] libCOMM_gv_cU_TychusSquadBarTargets;
int[libCOMM_gv_cUC_TYCHUS_MAX_SQUAD_SIZE + 1] libCOMM_gv_cU_TychusSquadPortraits;
int[libCOMM_gv_cUC_TYCHUS_MAX_SQUAD_SIZE + 1] libCOMM_gv_cU_TychusSquadPortraitsStatic;
int libCOMM_gv_cU_TychusSquadNextIndex;
int libCOMM_gv_cU_TychusMedivacCurrentCharges;
bool libCOMM_gv_cU_TychusSquadSpawnSkip;
bool libCOMM_gv_cU_TychusPurchaseUpgradePlaying;
timer libCOMM_gv_cM_TychusVOTransportReminderTimer;
unit[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_TychusMedicTransportUnit;
unitgroup[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_TychusMedicTransportUnitGroup;
unitgroup[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_TychusMedicGroundUnitsTransportGroupAir;
unitgroup[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_TychusMedicGroundUnitsTransportGroupGround;
point[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_TychusMedicTranportLoadPoint;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_TychusMedicTranportSendViaTopBar;
int libCOMM_gv_cM_Tychus_MaxHeroCount;
string[4] libCOMM_gv_c_CM_Tychus_UserTypeHeroRequirmentArray;
int libCOMM_gv_tychusHeroMaxCharges;
unit libCOMM_gv_cM_Tychus_FirebatOilCaster;
int libCOMM_gv_cM_Tychus_UltimatesPurchased;
unit[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_tychus_Unit;
timer libCOMM_gv_cM_SoATimeFreezeTimer;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreVorazunBHDmg;
unitgroup libCOMM_gv_cC_ScoreVorazunBHGroup;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreVorazunCloakDmg;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreZagaraFrenzyDmg;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreZagaraFrenzyDmgLast;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreZagaraSuicideDmg;
unit[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_yY_GPCasterUnitSecondary;
int libCOMM_gv_cU_ZeratulSelectionCmdPanel;
int[libCOMM_gv_cUC_ZERATUL_MAX_SELECTIONS + 1] libCOMM_gv_cU_ZeratulSelectionButtonContainers;
timer libCOMM_gv_cM_ArtifactTransmission_SelectAbilityReminder;
fixed libCOMM_gv_cMC_ZeratulVOTransmissionProphacyCastDelay;
unitgroup libCOMM_gv_cM_Zeratul_DevolvedUnits;
unit libCOMM_gv_cM_ZeratulVoidSeeker;
unit[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Zeratul_HeroStructure;
unitgroup[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Zeratul_HeroStructureUnitGroup;
unit libCOMM_gv_cM_ZeratulProphecyCamera;
fixed libCOMM_gv_cM_ZeratulArtifact_1_Hint_1_Timing;
fixed libCOMM_gv_cM_ZeratulArtifact_1_Hint_2_Timing;
fixed libCOMM_gv_cM_ZeratulArtifact_1_Hint_3_Timing;
fixed libCOMM_gv_cM_ZeratulArtifact_2_Hint_1_Timing;
fixed libCOMM_gv_cM_ZeratulArtifact_2_Hint_2_Timing;
fixed libCOMM_gv_cM_ZeratulArtifact_2_Hint_3_Timing;
fixed libCOMM_gv_cM_ZeratulArtifact_3_Hint_1_Timing;
fixed libCOMM_gv_cM_ZeratulArtifact_3_Hint_2_Timing;
fixed libCOMM_gv_cM_ZeratulArtifact_3_Hint_3_Timing;
unit libCOMM_gv_cM_ZeratulProphecyHintUnit;
unit libCOMM_gv_cM_ZeratulProphecyArtifact;
int libCOMM_gv_cM_ZeratulProphecyArtifactNumber;
bool libCOMM_gv_cM_ZeratulProphecyArtifactDebug;
region libCOMM_gv_cM_ZeratulProphecyArtifactBadRegion;
unitgroup[17] libCOMM_gv_cM_ZeratulTopBarRallyUnits;
unitgroup[17] libCOMM_gv_cM_ZeratulTopBarRallyRedirectUnits;
point[17] libCOMM_gv_cM_ZeratulTopBarRallyPoint;
unit[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cM_Zeratul_VoidRift;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreZeratulDmg;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMM_gv_cC_ScoreZeratulShieldRestore;
unitgroup libCOMM_gv_cM_Zeratul_RalliedGroup;

// Function Declarations
unit libCOMM_gf_CM_PlayerGetGlobalCaster2 (int lp_player);
unit libCOMM_gf_OBSOLETE_AF_GetHeroUnit (int lp_pPlayer);
string libCOMM_gf_AF_GetAbility (int lp_pPlayer, int lp_pButtonIndex);
fixed libCOMM_gf_AF_GetCooldown (int lp_pPlayer, int lp_pButtonIndex);
fixed libCOMM_gf_AF_GetCharges (int lp_pPlayer, int lp_pButtonIndex);
string libCOMM_gf_AF_GetButtonText (int lp_pPlayer, int lp_pButtonIndex);
bool libCOMM_gf_AF_AbilityHasCooldownAndEnergyCost (int lp_pPlayer, int lp_pButtonIndex);
bool libCOMM_gf_AF_AbilityIsAvailable (int lp_pPlayer, int lp_pButtonIndex);
fixed libCOMM_gf_AF_EnergyCostofAbility (string lp_pAbility);
string libCOMM_gf_AF_GetButton (int lp_pPlayer, int lp_pButtonIndex);
void libCOMM_gf_AF_TopBarNotificationsInitialization (int lp_player);
void libCOMM_gf_CM_SoATargetingModeEnter (int lp_player);
void libCOMM_gf_CM_SoATargetingModeExit (int lp_player);
void libCOMM_gf_CM_SoATargetingCleanupActorsAndUnits (int lp_player);
void libCOMM_gf_CM_SetFogAlphaOverTime (fixed lp_targetAlpha, fixed lp_duration, int lp_player);
void libCOMM_gf_CM_ResetFogAlphaOverTime (fixed lp_duration, int lp_player);
void libCOMM_gf_CM_SoATargetingCancel (int lp_player);
void libCOMM_gf_CU_GPInitAlarak (int lp_player);
void libCOMM_gf_CM_GPReminderArtanis (int lp_player);
void libCOMM_gf_CM_GPReminderAbathur (int lp_player);
void libCOMM_gf_CM_AbilityTransmissionAbathurNestReminderActionVer (int lp_abathurPlayer);
void libCOMM_gf_CM_Abathur_BiomassSetStack (unit lp_biomass, int lp_stack);
int libCOMM_gf_CM_Abathur_BiomassGetStack (unit lp_biomass);
void libCOMM_gf_CM_Abathur_BiomassTransfer (int lp_indexPlayer, unit lp_trainUnit, int lp_biomassBuff100Count, int lp_biomassBuff10Count, int lp_biomassBuff1Count);
void libCOMM_gf_CM_Abathur_BiomassScale (unit lp_biomassUnit, bool lp_instantScale);
void libCOMM_gf_CM_Abathur_BiomassMerge (unit lp_biomassUnit, int lp_biomassUnitCount);
void libCOMM_gf_CM_AbilityTransmissionDehakaWurmReminderActionVer (int lp_dehakaPlayer);
void libCOMM_gf_CM_DehakaConsumeFloatText (text lp_text, int lp_p, point lp_loc);
void libCOMM_gf_CM_DehakaConsumeUpdatePsiExplodeDamage (int lp_dehakaPlayer, unit lp_dehakaUnit, fixed lp_maguroMemorialWeaponDamage);
void libCOMM_gf_CM_Dehaka_SetLevelValues (int lp_player);
void libCOMM_gf_CM_Dehaka_LevelUp (int lp_dehakaPlayer, unit lp_dehakaUnit);
void libCOMM_gf_CM_Dehaka_EssenceSetStack (unit lp_essence, int lp_stack);
int libCOMM_gf_CM_Dehaka_EssenceGetStack (unit lp_essence);
void libCOMM_gf_CM_Dehaka_EssenceTransfer (int lp_indexPlayer, unit lp_trainUnit, int lp_essenceBuff100Count, int lp_essenceBuff10Count, int lp_essenceBuff1Count);
void libCOMM_gf_CM_Dehaka_EssenceScale (unit lp_essenceUnit, bool lp_instantScale);
void libCOMM_gf_CM_Dehaka_EssenceMerge (unit lp_essenceUnit, int lp_essenceUnitCount);
void libCOMM_gf_CM_AbilityTransmissionFenixSuitsReadyFirstTime (int lp_player, string lp_cooldownLink, unit lp_unit);
void libCOMM_gf_CU_GPInitFenix (int lp_player);
void libCOMM_gf_TransferGuardianShell (unit lp_source, unit lp_target);
void libCOMM_gf_FenixInitialDummySpawn (int lp_player);
void libCOMM_gf_CM_Fenix_SuicideRecallTalandarThread (int lp_player, abilcmd lp_cmd, point lp_targetPoint);
void libCOMM_gf_CM_Fenix_VitalMatch (unit lp_hero);
void libCOMM_gf_CM_Fenix_SetActiveHeroUIState (unit lp_unit, bool lp_active);
void libCOMM_gf_CM_Fenix_SetActiveHeroRally (unit lp_unit);
void libCOMM_gf_CM_Fenix_AvengingProtocol (int lp_group, int lp_player, int lp_stacksToApply);
void libCOMM_gf_CM_Fenix_UpdateNetworkValues (int lp_group, int lp_player);
void libCOMM_gf_CM_Fenix_UpdateFenixChampionShellCountValues (int lp_group, int lp_player);
void libCOMM_gf_CM_GPReminderHorner (int lp_player);
void libCOMM_gf_CM_UnitTransmissionHornerBomberBuildReminderActionVer (int lp_hornerPlayer);
void libCOMM_gf_CM_AbilityTransmissionHornerMagMineReminderActionVer (int lp_hornerPlayer);
void libCOMM_gf_CM_AbilityTransmissionHornerFleetReminderActionVer (int lp_player, soundlink lp_vOSound, string lp_cooldownLink, unit lp_unit, string lp_ability);
void libCOMM_gf_CM_Horner_ScrapResourceSetStack (unit lp_scrap, int lp_minerals, int lp_vespene);
void libCOMM_gf_CM_HornerStatUpdate (int lp_player);
void libCOMM_gf_CatalogFieldValueAdditiveBonus (int lp_catalog, string lp_entry, string lp_fieldPath, int lp_player, string lp_label, fixed lp_percentage, bool lp_fieldIsPeriod);
void libCOMM_gf_CM_Horner_BomberStatusCheck (int lp_player);
void libCOMM_gf_CC_AchievementToggleSuperChrono (bool lp_enableDisable);
void libCOMM_gf_CM_MasteryKerriganArmyVespeneCostList3 (int lp_player);
void libCOMM_gf_CM_MasteryKaraxUnitVitalIncrease (string lp_unitType, int lp_player, int lp_upgradeCount);
void libCOMM_gf_CM_KaraxSetRepairBeamLimit (int lp_player);
void libCOMM_gf_ZerglingRespawnSetPrimaryHatchery (unit lp_hatchery);
void libCOMM_gf_EnableDisableZerglingRespawn (bool lp_enableDisable);
void libCOMM_gf_CM_MasteryKerriganResearchSpeedCost (int lp_player);
void libCOMM_gf_CM_MasteryKerriganArmyVespeneCostList (int lp_player);
void libCOMM_gf_CM_MasteryKerriganArmyVespeneCostReduction (string lp_unitType, int lp_player, int lp_upgradeCount);
int libCOMM_gf_CC_ZergHeroBonusLife (int lp_player, int lp_startLevel, int lp_endLevel);
int libCOMM_gf_CC_ZergHeroBonusEnergy (int lp_player, int lp_startLevel, int lp_endLevel);
int libCOMM_gf_CC_ZergHeroBonusArmor (int lp_player, int lp_startLevel, int lp_endLevel);
int libCOMM_gf_CC_ZergHeroBonusDamage (int lp_player, int lp_startLevel, int lp_endLevel);
void libCOMM_gf_CC_KerriganApplyModelUpgrades (int lp_player);
void libCOMM_gf_CC_ZergHeroApplyStatBonuses (int lp_player, int lp_level);
string libCOMM_gf_CC_ChampResAbility (string lp_champion);
void libCOMM_gf_hide_own_nydus (unit lp_unit);
void libCOMM_gf_hide_ally_nydus (unit lp_unit);
void libCOMM_gf_CM_KerriganMalignantCreep ();
void libCOMM_gf_CU_GPInitMengsk (int lp_player);
void libCOMM_gf_CM_AbilityTransmission_MengskReminders (int lp_mengskPlayer);
void libCOMM_gf_CM_MasteryMengskRoyalGuardCostList (int lp_player);
void libCOMM_gf_CM_MasteryMengskRoyalGuardCostReduction (string lp_unitType, int lp_player, int lp_upgradeCount);
void libCOMM_gf_CM_Mengsk_CheckRoyalGuardSupply ();
fixed libCOMM_gf_CM_Mengsk_SupplyLevel (unitgroup lp_unitGroup);
void libCOMM_gf_CM_Mengsk_EnergyChanged (int lp_mengskPlayer);
void libCOMM_gf_CM_Mengsk_GlobalCasterEnergyRegen (unit lp_mengskGlobalCaster);
void libCOMM_gf_CM_Mengsk_GlobalCasterEnergyRegenCalculateRoyalGuard (int lp_mengskPlayer);
void libCOMM_gf_CM_Mengsk_GlobalCasterEnergyRegenCalculateTrooper (int lp_mengskPlayer);
void libCOMM_gf_CM_Mengsk_ForceMorphTrooper (unit lp_trooper, unit lp_pickup, string lp_morphEffect, string lp_morphBehavior, string lp_actorSignal);
void libCOMM_gf_CM_AbilityTransmissionNovaNukeReadyActionVer (int lp_novaPlayer);
text libCOMM_gf_CC_StoryArmyUnitUnitType2 (string lp_unitType);
text libCOMM_gf_CC_StoryArmyUnitUnitType (int lp_armyUnit);
void libCOMM_gf_NovaUnitNames_KillUpdateText (unit lp_updatingUnit, int lp_iD);
void libCOMM_gf_CM_Nova_IterateExistingBuildings (int lp_novaPlayer);
void libCOMM_gf_CM_ModifyCooldown (fixed lp_maxRegenTime, fixed lp_maxChargeCount, string lp_cooldownName, int lp_player);
void libCOMM_gf_CM_PrestigeNova_SpecializeUnitCharges (string lp_unitType, int lp_novaPlayer);
void libCOMM_gf_CM_GPReminderRaynor (int lp_player);
void libCOMM_gf_CM_PrestigeRaynor_AirSupplySetBonus (int lp_raynorPlayer);
void libCOMM_gf_CM_RaynorUpgradeResearchCost (int lp_player, int lp_level);
void libCOMM_gf_CU_GPInitStetmann (int lp_player);
void libCOMM_gf_CM_AbilityTransmission_StetelliteReminder (int lp_stetmannPlayer);
void libCOMM_gf_CM_AbilityTransmission_StetzoneReminder (int lp_stetmannPlayer);
void libCOMM_gf_CM_AbilityTransmission_GaryUpgradeReminder (int lp_stetmannPlayer);
void libCOMM_gf_CM_MasteryStetmannUpgradeCost (int lp_player);
void libCOMM_gf_StetmannPowerTowerEvent (trigger t, string lp_event);
int libCOMM_gf_EventStetmannPowerTowerTechLevel (string lp_techLevelParameter);
int libCOMM_gf_EventStetmannPowerTowerPlayer ();
void libCOMM_gf_CM_Stetmann_ThrowPowerTowerEvent (int lp_player);
void libCOMM_gf_CU_SetStetelliteChargeMax (int lp_player);
void libCOMM_gf_CU_DrawStetelliteChargePips (int lp_player, int lp_currentCharges, int lp_maxCharges);
void libCOMM_gf_CM_Stetmann_AdjustStetelliteChargesUsed (int lp_player);
void libCOMM_gf_CM_Stukov_SingleUnitGoToRally (unit lp_rallyingUnit, bool lp_overrideExistingOrders);
void libCOMM_gf_CM_Stukov_HordeGoToRally (int lp_player);
void libCOMM_gf_CM_Stukov_NewBunkerUnitProcess (unit lp_newUnit);
void libCOMM_gf_CM_Stukov_InfestStructureInitialCooldown (int lp_player);
void libCOMM_gf_CM_MasterySwannSiegeTankImmortalityProtocolCostReduction (int lp_player);
point libCOMM_gf_CM_LaserDrillTargetPoint (point lp_casterPoint, point lp_targetPoint, region lp_region, int lp_player);
void libCOMM_gf_CU_GPInitTychus (int lp_player);
void libCOMM_gf_CM_GPReminderTychus (int lp_player);
void libCOMM_gf_CC_SetTychusScoreUnit (int lp_tychusPlayer, string lp_unitType, bool lp_primary);
void libCOMM_gf_PlayTychusPurchaseUpgradeSound (int lp_tychusPlayer);
void libCOMM_gf_CU_TychusSetBarUnit (unit lp_tychusBarUnit);
void libCOMM_gf_InitTychusSquadUI (int lp_tychusPlayer);
void libCOMM_gf_UpdateTychusSquadAvailability (int lp_player);
void libCOMM_gf_UpdateTychusSquadAvailabilityProgressBar (int lp_squadIndex, fixed lp_duration, int lp_tychusPlayer);
void libCOMM_gf_UpdateTychusSquadTargetFrame (string lp_squadInstance, unit lp_targetUnit);
void libCOMM_gf_SetTychusSquadMember (unit lp_unit, int lp_squadIndex, string lp_squadInstance);
int libCOMM_gf_GetNextTychusSquadIndex ();
string libCOMM_gf_GetTychusSquadCasterByIndex (int lp_squadIndex);
string libCOMM_gf_GetTychusSquadInstance (unit lp_unit);
void libCOMM_gf_TychusHeroEvent (trigger t, string lp_event);
unit libCOMM_gf_EventTychusHero ();
string libCOMM_gf_EventTychusHeroInstance ();
void libCOMM_gf_TychusStructureEvent (trigger t, string lp_event);
unit libCOMM_gf_EventTychusStructure ();
void libCOMM_gf_ModifyTychusMedivacCharges (int lp_chargesDelta);
void libCOMM_gf_CM_Tychus_UpdateHeroTechTree (int lp_p);
void libCOMM_gf_CM_Tychus_SetHeroRequiredTechLevel (int lp_p, int lp_level);
void libCOMM_gf_CM_Tychus_SetHeroCostMultiply (int lp_p, fixed lp_multiplyMinerals, fixed lp_multiplyVespene);
int libCOMM_gf_CM_Tychus_TechLevel (int lp_p);
int libCOMM_gf_CM_Tychus_TechLevel2 (int lp_p);
void libCOMM_gf_CM_Tychus_UltimateTimeAchievement (int lp_player);
void libCOMM_gf_CM_Tychus_InitHeroTechLimit (int lp_player);
fixed libCOMM_gf_CalculateTychusRecruitmentChargeCooldown (int lp_tychusPlayer);
void libCOMM_gf_ApplyTychusMaxChargesPerk (int lp_player);
void libCOMM_gf_CM_ReplaceTychusRageEffect (string lp_rageEffect, string lp_dummyEffectInstance, point lp_targetPoint, unit lp_targetUnit, unit lp_tychusUnit);
void libCOMM_gf_CM_ApplyTychusRageBuffs (string lp_rageBuff, unit lp_targetUnit, unit lp_tychusUnit);
void libCOMM_gf_CM_GPReminderVorazun (int lp_player);
void libCOMM_gf_CC_AchievementToggleTimeStop (bool lp_enableDisable);
void libCOMM_gf_CM_SoATimeFreezeApply (int lp_castingPlayer);
void libCOMM_gf_CM_MasteryZagraRoachLifeIncrease (int lp_player);
void libCOMM_gf_CU_GPInitZeratul (int lp_player);
void libCOMM_gf_CU_ZeratulArtifactHintTrack (int lp_player);
void libCOMM_gf_CM_Zeratul_ApplyDevolve (unit lp_targetUnit);
bool libCOMM_gf_CM_Zeratul_DevolveUnitTypeAllowed (string lp_devolveUnitType);
int libCOMM_gf_CM_Zeratul_DevolveGetUnitTier (string lp_unitType);
string libCOMM_gf_CM_Zeratul_DevolveGetNewUnitType (string lp_oldUnitType, int lp_newTier);
void libCOMM_gf_CM_Zeratul_PurificationNova_SpawnSmallOrb (unit lp_caster, point lp_spawnPoint, point lp_targetPoint);
void libCOMM_gf_CM_ZeratulProphecyEvent (trigger t, string lp_event);
void libCOMM_gf_CM_SendZeratulProphecyEventArtifact (string lp_event, int lp_zeratulPlayer, unit lp_artifactUnit, int lp_artifactNumber);
unit libCOMM_gf_CM_ZeratulProphecyEventGetUnit (int lp_unit);
int libCOMM_gf_CM_ZeratulProphecyEventGetArtifactNumber ();
int libCOMM_gf_CM_ZeratulProphecyEventGetPlayer ();
int libCOMM_gf_CM_Zeratul_ProphecyHintLevel (int lp_artifactNumber);
void libCOMM_gf_CM_Zeratul_GiveProphecyHint (int lp_hintLevel);
void libCOMM_gf_CM_Zeratul_SetProphecyCooldown ();
void libCOMM_gf_CM_Zeratul_SpawnResourcePickups (int lp_count, point lp_location);
void libCOMM_gf_CM_Zeratul_PlaceArtifact (int lp_p);
void libCOMM_gf_CM_ZeratulProphecyArtifactBadRegion_Set ();
int libCOMM_gf_CM_Zeratul_GetArtifactDifficultyIndex (int lp_player, int lp_artifactNumber, string lp_artifactData);
point libCOMM_gf_CM_Zeratul_FindArtifactPlacementPoint (int lp_player, int lp_artifactNumber);
string libCOMM_gf_CM_Zeratul_GetArtifactPlacementDataInstance ();
point libCOMM_gf_CM_Zeratul_GetArtifactPlacementOrigin (string lp_artifactPlacementData);
int libCOMM_gf_CM_Zeratul_GetArtifactLimit (int lp_zeratulPlayer);

// Trigger Declarations
trigger libCOMM_gt_ShieldColorUnitCreateAlarakFenix;
trigger libCOMM_gt_ShieldColorUnitMorphAlarakFenix;
trigger libCOMM_gt_AF_TopBarNotificationsEnableDisable;
trigger libCOMM_gt_AF_TopBarClicked;
trigger libCOMM_gt_AF_MouseEntersTopBar;
trigger libCOMM_gt_AF_MouseExitsTopBar;
trigger libCOMM_gt_CM_GPReminderAbilityUsed;
trigger libCOMM_gt_CreepTumorBuild;
trigger libCOMM_gt_BanelingScourgeDeathrattleScrapDeaths;
trigger libCOMM_gt_BanelingScourgeEconDrop;
trigger libCOMM_gt_BanelingScourgeLocusts;
trigger libCOMM_gt_BanelingScourgeEssenceDrop;
trigger libCOMM_gt_BanelingScourgeBiomassDrop;
trigger libCOMM_gt_CM_SoAShiftCheatFailSafeThermal;
trigger libCOMM_gt_CM_SoAShiftCheatFailSafeHHCallFleet;
trigger libCOMM_gt_CM_SoAShiftCheatFailSafeNovaBombing;
trigger libCOMM_gt_CM_SoATargetingForceOff;
trigger libCOMM_gt_CM_SoATargetingDeactivated;
trigger libCOMM_gt_CM_SoATargetingPointChosen;
trigger libCOMM_gt_CM_SoATargetingDirectionChosen;
trigger libCOMM_gt_CM_SoATargetingEffectFired;
trigger libCOMM_gt_CM_SoATargetingCancel;
trigger libCOMM_gt_CM_SoATargetingCancelFromUI;
trigger libCOMM_gt_CM_SoATargetingCameraShake;
trigger libCOMM_gt_ChronoAnimSpeedOn;
trigger libCOMM_gt_ChronoAnimSpeedOff;
trigger libCOMM_gt_CM_SoAGravitonBombActivated;
trigger libCOMM_gt_CC_ScoreArtanisKaraxOrbitalStrike;
trigger libCOMM_gt_CM_SoAOrbitalStrikeActivated;
trigger libCOMM_gt_CM_SoAOrbitalStrikeActivatedKarax;
trigger libCOMM_gt_DUT_CommanderAlarak;
trigger libCOMM_gt_CU_GPAlarakGemPress;
trigger libCOMM_gt_CM_AbilityTransmissionAlarakEmpower;
trigger libCOMM_gt_CM_AbilityTransmissionAlarakDeathFleet;
trigger libCOMM_gt_CM_AbilityTransmissionAlarakOvercharge;
trigger libCOMM_gt_CM_AbilityTransmissionAlarakSacrifice;
trigger libCOMM_gt_CC_ScoreAlarakDmg;
trigger libCOMM_gt_CC_ScoreAlarakHeal;
trigger libCOMM_gt_CC_ScoreAlarakSacrificeHeal;
trigger libCOMM_gt_SupplicantWarpTrain;
trigger libCOMM_gt_SupplicantActualTrain;
trigger libCOMM_gt_SupplicantWarpFinish;
trigger libCOMM_gt_SupplicantWarpCancel;
trigger libCOMM_gt_CM_Alarak_Upgrade;
trigger libCOMM_gt_CM_Alarak_Sacrific_Scale;
trigger libCOMM_gt_CM_AlarakLightningStrikes_FlashOn;
trigger libCOMM_gt_CM_AlarakLightningStrikes_FlashOff;
trigger libCOMM_gt_CM_AlarakLightningStrikes_Sacriface;
trigger libCOMM_gt_CM_Alarak_SoulAbsorption_Impact;
trigger libCOMM_gt_CM_Alarak_SoulAbsorption_Launch;
trigger libCOMM_gt_CM_Alarak_SoulAbsorption_PrestigeMechBuff;
trigger libCOMM_gt_CM_Alarak_EmpowerAdd;
trigger libCOMM_gt_CM_Alarak_EmpowerRemove;
trigger libCOMM_gt_CM_Alarak_EmpowerWorshiperAdd;
trigger libCOMM_gt_CM_Alarak_EmpowerWorshiperRemove;
trigger libCOMM_gt_CM_Alarak_EmpowerUpdate;
trigger libCOMM_gt_DUT_CommanderArtanis;
trigger libCOMM_gt_CM_AchievementArtanisSolarBombardmentUsed;
trigger libCOMM_gt_PM_SoAStrafeActivated;
trigger libCOMM_gt_PM_SoASuperShieldsActivated;
trigger libCOMM_gt_CM_AbilityTransmissionArtanisSuperShields;
trigger libCOMM_gt_CC_ScoreArtanisAbsorb;
trigger libCOMM_gt_CC_ScoreArtanisBombardment;
trigger libCOMM_gt_CM_DebugAbathurBiomassReport;
trigger libCOMM_gt_DUT_CommanderAbathur;
trigger libCOMM_gt_MM_AbathurChosen;
trigger libCOMM_gt_MM_BiomassSizeUpdate;
trigger libCOMM_gt_CM_AbilityTransmissionAbathurMend;
trigger libCOMM_gt_CC_ScoreAbathurHealing;
trigger libCOMM_gt_CC_ScoreAbathurMonsterDmg;
trigger libCOMM_gt_CM_Abathur_ToxicNestDeathFailsafe;
trigger libCOMM_gt_CM_Abathur_MeleeBonusUpgrade;
trigger libCOMM_gt_CM_Abathur_BiomassDrop;
trigger libCOMM_gt_CM_Abathur_BiomassPickup;
trigger libCOMM_gt_CM_Abathur_BiomassRefund;
trigger libCOMM_gt_CM_DebugAbathurBiomassLost;
trigger libCOMM_gt_CM_Abathur_BiomassTrain;
trigger libCOMM_gt_CM_Abathur_BiomassManualUpdate;
trigger libCOMM_gt_CM_Abathur_BiomassScaler;
trigger libCOMM_gt_CM_Abathur_Enemy_Death_Create_Locusts;
trigger libCOMM_gt_CM_Abathur_ToxicNest;
trigger libCOMM_gt_CM_Abathur_SwarmHostLocustLaunchCast;
trigger libCOMM_gt_CM_Abathur_RavagerSpellCooldown;
trigger libCOMM_gt_InitDehaka;
trigger libCOMM_gt_CM_AbilityTransmissionDehakaGlevig;
trigger libCOMM_gt_CM_AbilityTransmissionDehakaMurvar;
trigger libCOMM_gt_CM_AbilityTransmissionDehakaDakrun;
trigger libCOMM_gt_CM_AbilityTransmissionDehakaPrimalWurm;
trigger libCOMM_gt_CM_UnitTransmissionDehakaGlevigConstruct;
trigger libCOMM_gt_CM_UnitTransmissionDehakaMurvarConstruct;
trigger libCOMM_gt_CM_UnitTransmissionDehakaDakrunConstruct;
trigger libCOMM_gt_CM_AbilityTransmissionDehakaChangeReminderLevel;
trigger libCOMM_gt_CM_AbilityTransmissionDehakaChangeReminderLearn;
trigger libCOMM_gt_CM_AbilityTransmissionDehakaChangeReminderTimerExpire;
trigger libCOMM_gt_CM_AbilityTransmissionDehakaWurmStructureBuilt;
trigger libCOMM_gt_CM_AbilityTransmissionDehakaWurmStructureKilled;
trigger libCOMM_gt_CC_ScoreDehakaDmg;
trigger libCOMM_gt_CC_ScoreDehakaConsumeSupply;
trigger libCOMM_gt_CM_DehakaGeneThornsOn;
trigger libCOMM_gt_CM_DehakaDenReviveFootprintOn;
trigger libCOMM_gt_CM_DehakaDenReviveFootprintOff;
trigger libCOMM_gt_CM_DehakaDenReviveEatTextTagDead;
trigger libCOMM_gt_CM_DehakaDenReviveEatTextTagRevived;
trigger libCOMM_gt_CM_DehakaDenReviveEatUsed;
trigger libCOMM_gt_CM_DehakaBossFacingSetting;
trigger libCOMM_gt_CM_DehakaMutaliskReviveCooldownOn;
trigger libCOMM_gt_CM_DehakaMammothBreathLookAtStart;
trigger libCOMM_gt_CM_DehakaMammothBreathLookAtStop;
trigger libCOMM_gt_CM_DehakaConsumeTimeStopHackOn;
trigger libCOMM_gt_CM_DehakaConsumeExecuted;
trigger libCOMM_gt_CM_DehakaConsumeDetachFailSafe;
trigger libCOMM_gt_CM_DehakaConsumeLaunchFailSafe;
trigger libCOMM_gt_CM_DehakaConsumeEffectHeroic;
trigger libCOMM_gt_CM_DehakaConsumeLearnLevel2;
trigger libCOMM_gt_CM_DehakaConsumeLearnLevel3;
trigger libCOMM_gt_CM_DehakaLearn;
trigger libCOMM_gt_CM_DehakaPackLeaderGlevigBuilt;
trigger libCOMM_gt_CM_DehakaPackLeaderMurvarBuilt;
trigger libCOMM_gt_CM_DehakaPackLeaderDakrunBuilt;
trigger libCOMM_gt_CM_DehakaReviveGasWorkerBehaviorAdd;
trigger libCOMM_gt_CM_DehakaReviveGasWorkerBehaviorRemove;
trigger libCOMM_gt_CM_DehakaReviveEatButtonClicked;
trigger libCOMM_gt_CM_DehakaReviveTimerAdjustments;
trigger libCOMM_gt_CM_DehakaGlevigTimerAdjustments;
trigger libCOMM_gt_CM_DehakaAutocastSettingsOn;
trigger libCOMM_gt_CM_DehakaAutocastSettingsOff;
trigger libCOMM_gt_CM_DehakaAutocastBossSummonStateAdjust;
trigger libCOMM_gt_CM_Dehaka_EssenceDrop;
trigger libCOMM_gt_CM_Dehaka_EssencePickup;
trigger libCOMM_gt_CM_Dehaka_EssenceManualUpdate;
trigger libCOMM_gt_CM_Dehaka_LevelUp_Stage2_ColossusLegs;
trigger libCOMM_gt_CM_Dehaka_LevelUp_Stage3;
trigger libCOMM_gt_CM_Dehaka_LevelUp_Stun_Off;
trigger libCOMM_gt_CM_Dehaka_LevelUp_LearnOrder;
trigger libCOMM_gt_CM_Dehaka_UnitCostRefund;
trigger libCOMM_gt_CM_Dehaka_PrestigeClone;
trigger libCOMM_gt_CM_Dehaka_PrestigeCloneRevive;
trigger libCOMM_gt_DUT_CommanderFenix;
trigger libCOMM_gt_CM_AbilityTransmissionFenixCreateTalis;
trigger libCOMM_gt_CM_AbilityTransmissionFenixCreateKaldalis;
trigger libCOMM_gt_CM_AbilityTransmissionFenixCreateTaldarin;
trigger libCOMM_gt_CM_AbilityTransmissionFenixCreateWarbringer;
trigger libCOMM_gt_CM_AbilityTransmissionFenixCreateMojo;
trigger libCOMM_gt_CM_AbilityTransmissionFenixCreateClolarion;
trigger libCOMM_gt_CM_AbilityTransmissionFenixZealotSuit;
trigger libCOMM_gt_CM_AbilityTransmissionFenixDragoonSuit;
trigger libCOMM_gt_CM_AbilityTransmissionFenixArbiterSuit;
trigger libCOMM_gt_CM_AbilityTransmissionFenixMassRecall;
trigger libCOMM_gt_CM_HeroTransmissionFenixHeroDies;
trigger libCOMM_gt_CM_HeroTransmissionFenixHeroRepaired;
trigger libCOMM_gt_CM_HeroTransmissionFenixNameChange;
trigger libCOMM_gt_CC_ScoreFenixChampionDmg;
trigger libCOMM_gt_CC_ScoreFenixSuitDmg;
trigger libCOMM_gt_CM_MasteryFenixResearchCostReduction;
trigger libCOMM_gt_CM_Fenix_AchievementCarrierAmount;
trigger libCOMM_gt_CM_Fenix_AchievementCarrierResearched;
trigger libCOMM_gt_CM_Fenix_TaldarinDetonationStore;
trigger libCOMM_gt_CM_Fenix_TaldarinDetonationRelease;
trigger libCOMM_gt_CM_Fenix_HeroSpawn;
trigger libCOMM_gt_CM_Fenix_HeroSpawnCleanup;
trigger libCOMM_gt_CM_Fenix_HeroKilled;
trigger libCOMM_gt_CM_Fenix_SuicideUpdateVital;
trigger libCOMM_gt_CM_Fenix_ResearchRemoveSuicide;
trigger libCOMM_gt_CM_Fenix_RallySetToFenix;
trigger libCOMM_gt_CM_Fenix_ChampionInitialSetup;
trigger libCOMM_gt_CM_Fenix_ChampionPotentialVoluteerTrained;
trigger libCOMM_gt_CM_Fenix_ChampionBuildingReBuilt;
trigger libCOMM_gt_CM_Fenix_ChampionUpgradeResearched;
trigger libCOMM_gt_CM_Fenix_ChampionTimers;
trigger libCOMM_gt_CM_Fenix_ChampionMorphed;
trigger libCOMM_gt_CM_Fenix_ChampionDies;
trigger libCOMM_gt_CM_Fenix_NetworkedUnitDies;
trigger libCOMM_gt_CM_Fenix_ProbiusSwap;
trigger libCOMM_gt_CM_Fenix_AvengingProtocol_BuffExpires;
trigger libCOMM_gt_CM_Fenix_ConclaiveTrainStart;
trigger libCOMM_gt_CM_Fenix_ConclaiveTrainStop;
trigger libCOMM_gt_CM_Fenix_ChampionAugmentAbilitySoundTrigger;
trigger libCOMM_gt_CM_Fenix_ChargedBusterOnCost;
trigger libCOMM_gt_CM_Fenix_ChargedBusterOffCost;
trigger libCOMM_gt_CM_FenixAutocastSettingsOn;
trigger libCOMM_gt_CM_FenixAutocastSettingsOff;
trigger libCOMM_gt_CM_FenixAutocastSuitSummonStateAdjust;
trigger libCOMM_gt_CM_AchievementFenixChampionAllExist;
trigger libCOMM_gt_CM_Fenix_SentryNullShield;
trigger libCOMM_gt_DUT_CommanderHanHorner;
trigger libCOMM_gt_CM_AbilityTransmissionHornerFleet;
trigger libCOMM_gt_CM_AbilityTransmissionHornerStation;
trigger libCOMM_gt_CM_UnitTransmissionHornerBomberBuild;
trigger libCOMM_gt_CM_AbilityTransmissionHornerBomberUse;
trigger libCOMM_gt_CM_AbilityTransmissionHornerBomberReminder;
trigger libCOMM_gt_CC_ScoreHornerMagMineDmg;
trigger libCOMM_gt_CC_ScoreHornerScrapPickup;
trigger libCOMM_gt_CM_Horner_AirFleet_Activated;
trigger libCOMM_gt_CM_Horner_DeathRattleHellionFearApply;
trigger libCOMM_gt_CM_Horner_DeathRattle_Reaper;
trigger libCOMM_gt_CM_Horner_DeathRattle_WidowMine;
trigger libCOMM_gt_CM_Horner_DeathRattle_Hellion;
trigger libCOMM_gt_CM_Horner_DeathRattle_Hellbat;
trigger libCOMM_gt_CM_Horner_DoubleSupplyStun;
trigger libCOMM_gt_CM_Horner_MTO_Upgrade;
trigger libCOMM_gt_CM_Horner_HangerFinish;
trigger libCOMM_gt_CM_Horner_ScrapDrop;
trigger libCOMM_gt_CM_Horner_ScrapDropForSwannWreckage;
trigger libCOMM_gt_CM_Horner_ScrapPickup;
trigger libCOMM_gt_CM_Horner_SupplyAchievement;
trigger libCOMM_gt_CM_Horner_StarportCreateTechLabOrder;
trigger libCOMM_gt_CM_Horner_StarportCreateTechLabStart;
trigger libCOMM_gt_CM_Horner_StarportCreateTechLabFinish;
trigger libCOMM_gt_CM_Horner_StarportRecreateTechLabOrder;
trigger libCOMM_gt_CM_Horner_StarportRecreate;
trigger libCOMM_gt_CM_Horner_StarportFinishCreateTechLabOrder;
trigger libCOMM_gt_CM_Horner_BomberPlatform_PlatformCreated;
trigger libCOMM_gt_CM_Horner_BomberPlatform_PlatformDies;
trigger libCOMM_gt_CM_Horner_BomberPlatform_BomberLaunched;
trigger libCOMM_gt_CM_Horner_BomberPlatform_BomberReturned;
trigger libCOMM_gt_CM_Horner_BomberPlatform_BomberRebuilt;
trigger libCOMM_gt_CM_Horner_BomberPlatform_TopBar_TargetSelected;
trigger libCOMM_gt_CM_Horner_BomberPlatform_Individual_TargetSelected;
trigger libCOMM_gt_CM_Horner_VikingTacticalJumpMorph;
trigger libCOMM_gt_CM_Horner_MagMines;
trigger libCOMM_gt_DUT_CommanderKarax;
trigger libCOMM_gt_CM_SoAThermalLanceActivated;
trigger libCOMM_gt_PM_SoATargetingPurifierBeamOn;
trigger libCOMM_gt_PM_SoATargetingPurifierBeamOff;
trigger libCOMM_gt_CM_SoASuperChronoApply;
trigger libCOMM_gt_CM_SoASuperChronoCleanup;
trigger libCOMM_gt_CM_AbilityTransmissionKaraxPassiveChronoBoost;
trigger libCOMM_gt_CM_AbilityTransmissionKaraxChronoMap;
trigger libCOMM_gt_CC_ScoreKaraxSolarLance;
trigger libCOMM_gt_CC_ScoreKaraxPurifierBeam;
trigger libCOMM_gt_CC_ScoreKaraxChronoProduction;
trigger libCOMM_gt_CM_MasteryKaraxUnitVitalList;
trigger libCOMM_gt_CM_KaraxSolarForgeSOAEnergy;
trigger libCOMM_gt_CM_AchievementKaraxSolarLanceUsed;
trigger libCOMM_gt_CM_KaraxRepairBeamLimit;
trigger libCOMM_gt_CM_KaraxUnitReviveBarrier;
trigger libCOMM_gt_DUT_CommanderKerrigan;
trigger libCOMM_gt_EnableZerglingReconstruction;
trigger libCOMM_gt_CM_HatcheryPrimarySearch;
trigger libCOMM_gt_CM_HatcheryEggModels;
trigger libCOMM_gt_CM_HatcheryEggBirths;
trigger libCOMM_gt_ConjoinedVitalRegenOnOff;
trigger libCOMM_gt_CM_AbilityTransmissionKerriganCrushingGrip;
trigger libCOMM_gt_CM_AbilityTransmissionKerriganAssimilation;
trigger libCOMM_gt_CC_ScoreKerriganDmg;
trigger libCOMM_gt_CC_ScoreKerriganResources;
trigger libCOMM_gt_CM_MasteryKerriganResearchSpeedCost;
trigger libCOMM_gt_CM_MasteryKerriganArmyVespeneCostList;
trigger libCOMM_gt_NYDUS_CREATED;
trigger libCOMM_gt_NYDUS_CREATED2;
trigger libCOMM_gt_NYDUS_CREATED3;
trigger libCOMM_gt_CM_MasteryKerriganInstantReviveCooldown;
trigger libCOMM_gt_KerriganPsiStrike;
trigger libCOMM_gt_KerriganEconDrop;
trigger libCOMM_gt_CM_Kerrigan_WeaponSwap;
trigger libCOMM_gt_DUT_CommanderMengsk;
trigger libCOMM_gt_CM_Mengsk_ArtilleryBuilt;
trigger libCOMM_gt_CM_Mengsk_ArtilleryStarted;
trigger libCOMM_gt_CM_AbilityTransmissionMengskNuclearAnnihilation;
trigger libCOMM_gt_CM_AbilityTransmissionMengskDirtyBomb;
trigger libCOMM_gt_CM_AbilityTransmissionMengskZergCalldown;
trigger libCOMM_gt_CM_AbilityTransmissionMengskForcedConscription;
trigger libCOMM_gt_CC_ScoreMengskDamage;
trigger libCOMM_gt_CM_MasteryMengskRoyalGuardCostList;
trigger libCOMM_gt_CM_Mengsk_TopBarKills;
trigger libCOMM_gt_CM_Mengsk_ArtilleryBombardmentTarget;
trigger libCOMM_gt_CM_Mengsk_ArtilleryExperimentalStrikeTarget;
trigger libCOMM_gt_CM_Mengsk_ArtilleryGlobalExperimentalStrikeTarget;
trigger libCOMM_gt_CM_Mengsk_GlobalAbilityCast;
trigger libCOMM_gt_CM_Mengsk_ArtilleryExperimentalStrikeFearApply;
trigger libCOMM_gt_CM_Mengsk_NuclearAnnihilationSmallNukes;
trigger libCOMM_gt_CM_Mengsk_ArtilleryBombardmentCargoChange;
trigger libCOMM_gt_CM_Mengsk_RegisterVeteranUnit;
trigger libCOMM_gt_CM_Mengsk_RemoveVeteranUnit;
trigger libCOMM_gt_CM_Mengsk_VeteranDies;
trigger libCOMM_gt_CM_Mengsk_VeteranDing;
trigger libCOMM_gt_CM_Mengsk_RegisterPropagandaUnit;
trigger libCOMM_gt_CM_Mengsk_RemovePropagandaUnit;
trigger libCOMM_gt_CM_Mengsk_PropagandaUpgraded;
trigger libCOMM_gt_CM_Mengsk_VeterancyEarned;
trigger libCOMM_gt_CM_Mengsk_MedivacAirlift;
trigger libCOMM_gt_CM_Mengsk_MedivacAirliftDing;
trigger libCOMM_gt_CM_Mengsk_EnlistStart;
trigger libCOMM_gt_CM_Mengsk_EnlistStop;
trigger libCOMM_gt_CM_Mengsk_ReturnToWork;
trigger libCOMM_gt_CM_Mengsk_WeaponPickupRegister;
trigger libCOMM_gt_CM_Mengsk_WeaponPickerUpperRegister;
trigger libCOMM_gt_CM_Mengsk_WeaponPickerUpperUnregister;
trigger libCOMM_gt_CM_Mengsk_WeaponPickup;
trigger libCOMM_gt_CM_Mengsk_ZergSeekDestroy;
trigger libCOMM_gt_CM_Mengsk_ZerglingMengskSpawn;
trigger libCOMM_gt_CM_Mengsk_HydraliskMengskSpawn;
trigger libCOMM_gt_CM_Mengsk_MutaliskMengskSpawn;
trigger libCOMM_gt_CM_Mengsk_UltraliskMengskSpawn;
trigger libCOMM_gt_CM_Mengsk_BunkerDepotDropFillCargo;
trigger libCOMM_gt_CM_Mengsk_DirtyBombSweetener;
trigger libCOMM_gt_DUT_CommanderNova;
trigger libCOMM_gt_CM_NovaRespawnBuyBackCostAdjustment;
trigger libCOMM_gt_CM_NovaRespawnBuyBack;
trigger libCOMM_gt_CM_AbilityTransmissionNovaBombingRun;
trigger libCOMM_gt_CM_AbilityTransmissionNovaTransport;
trigger libCOMM_gt_CM_AbilityTransmissionNovaDMatrix;
trigger libCOMM_gt_CC_ScoreNovaDmg;
trigger libCOMM_gt_CC_ScoreNovaHeal;
trigger libCOMM_gt_CC_ScoreNovaAbsorb;
trigger libCOMM_gt_NovaUnitNames_GenerateNameList;
trigger libCOMM_gt_NovaUnitNames_Assign;
trigger libCOMM_gt_NovaUnitNames_KillCountUpdate;
trigger libCOMM_gt_NovaUnitNames_KillCountUpdateLaserTurret;
trigger libCOMM_gt_CM_NovaGriffinTransportActived;
trigger libCOMM_gt_CM_NovaGriffinTransportStop;
trigger libCOMM_gt_CM_NovaGriffinTransportTimeOut;
trigger libCOMM_gt_CM_NovaGriffinTransportAirBehaviorApplied;
trigger libCOMM_gt_CM_NovaGriffinTransportGroundBehaviorApplied;
trigger libCOMM_gt_CM_NovaGriffinTransportTeleportUnload;
trigger libCOMM_gt_CM_NovaGriffinBombingRunActivated;
trigger libCOMM_gt_CM_NovaGriffinBombingRunFinish;
trigger libCOMM_gt_CM_Nova_BuildingCompletedTrigger;
trigger libCOMM_gt_CM_NovaSiegeModeProgressiveRangeIncreaseApply;
trigger libCOMM_gt_CM_NovaPsiStrike;
trigger libCOMM_gt_DUT_CommanderRaynor;
trigger libCOMM_gt_CM_AbilityTransmissionRaynorHyperion;
trigger libCOMM_gt_CM_AbilityTransmissionRaynorBansheesUsed;
trigger libCOMM_gt_CC_ScoreRaynorMedicHeal;
trigger libCOMM_gt_CC_ScoreRaynorHyperionDmg;
trigger libCOMM_gt_CM_MasteryRaynorResearchCostReduction;
trigger libCOMM_gt_CM_AchievementRaynorBansheesUsed;
trigger libCOMM_gt_CM_PrestigeRaynor_AirSupplyChanged;
trigger libCOMM_gt_CM_HyperionMinimapIconDynamicFacingDisplay;
trigger libCOMM_gt_DUT_CommanderStetmann;
trigger libCOMM_gt_CM_GaryDeath;
trigger libCOMM_gt_CM_GaryUpgradeReminder;
trigger libCOMM_gt_CC_ScoreStetmannGaryDmg;
trigger libCOMM_gt_CC_ScoreStetmannOverload;
trigger libCOMM_gt_CM_MasteryStetmannUpgradeCost;
trigger libCOMM_gt_CM_Stetmann_EventHook_LairHiveCreated;
trigger libCOMM_gt_CM_Stetmann_EventHook_LairHiveMorphed;
trigger libCOMM_gt_CM_Stetmann_GaryTransformAchievement;
trigger libCOMM_gt_CM_Stetmann_StetelliteOverchargeAllyAchievement;
trigger libCOMM_gt_CU_StetelliteMaxChargesChanged;
trigger libCOMM_gt_CU_StetelliteChargesChanged;
trigger libCOMM_gt_CM_Stetmann_PowerFieldToggle;
trigger libCOMM_gt_CM_Stetmann_BanelingEnergyDamageBoost;
trigger libCOMM_gt_CM_Stetmann_BroodLordArmBroodling;
trigger libCOMM_gt_CM_Stetmann_PowerTowerTechLevel;
trigger libCOMM_gt_CM_Stetmann_GaryUpgrade;
trigger libCOMM_gt_CM_Stetmann_Set;
trigger libCOMM_gt_CM_Stetmann_StetelliteChainCast;
trigger libCOMM_gt_DUT_CommanderStukov;
trigger libCOMM_gt_CM_AbilityTransmissionStukovAleksander;
trigger libCOMM_gt_CM_AbilityTransmissionStukovApocalisk;
trigger libCOMM_gt_CM_AbilityTransmissionStukovInfestStructure;
trigger libCOMM_gt_CC_ScoreStukovInfestedDmg;
trigger libCOMM_gt_CC_ScoreStukovMonstrosityDmg;
trigger libCOMM_gt_StukovSnareBehaviorOn2;
trigger libCOMM_gt_CM_Stukov_FullSupplyCheat;
trigger libCOMM_gt_CM_Stukov_AutoCreepTumor;
trigger libCOMM_gt_CM_Stukov_InfestedStructureInitialSpawn;
trigger libCOMM_gt_CM_Stukov_InfestedStructureRebuilt;
trigger libCOMM_gt_CM_Stukov_HordeWaveSpawner;
trigger libCOMM_gt_CM_Stukov_HordeWaveCreated;
trigger libCOMM_gt_CM_Stukov_HordeWaveExploderCreated;
trigger libCOMM_gt_CM_Stukov_HordeWaveInteruptionReissueOrder;
trigger libCOMM_gt_CM_Stukov_RallyPlaced;
trigger libCOMM_gt_CM_Stukov_RallyToUnitDies;
trigger libCOMM_gt_CM_Stukov_InfestedBunkerAutoLoad;
trigger libCOMM_gt_CM_Stukov_InfestedTimedLifeFoodHackBurrow;
trigger libCOMM_gt_CM_Stukov_InfestedTimedLifeFoodHackTrain;
trigger libCOMM_gt_CM_Stukov_InfestedBunkerUnloadRally;
trigger libCOMM_gt_CM_Stukov_InfestedBunkerRegister;
trigger libCOMM_gt_CM_Stukov_InfestedBunkerInitialSpawn;
trigger libCOMM_gt_CM_Stukov_UnitCostRefund;
trigger libCOMM_gt_CM_Stukov_InfestedSiegeTankDeath;
trigger libCOMM_gt_DUT_CommanderSwann;
trigger libCOMM_gt_CM_AchievementSwannCombatDropUsed;
trigger libCOMM_gt_SwannVespeneDroneTrigger;
trigger libCOMM_gt_SwannSiegeTankRebuildController;
trigger libCOMM_gt_SwannThorRebuildController;
trigger libCOMM_gt_SwannLaserDrillCallForHelp;
trigger libCOMM_gt_CM_AbilityTransmissionSwannDrone;
trigger libCOMM_gt_CM_AbilityTransmissionSwannLaserDrill;
trigger libCOMM_gt_CM_AbilityTransmissionSwannCombatDropUsed;
trigger libCOMM_gt_CC_ScoreSwannSVHeal;
trigger libCOMM_gt_CC_ScoreSwannDrillDmg;
trigger libCOMM_gt_CM_MasterySwannSiegeTankImmortalityProtocolCostReduction;
trigger libCOMM_gt_CM_LaserDrillBFGActivate;
trigger libCOMM_gt_CM_LaserDrillNukeActivate;
trigger libCOMM_gt_CM_LaserDrillBFG;
trigger libCOMM_gt_LaserDrillBeamSoundRegionClear;
trigger libCOMM_gt_LaserDrillBeamSoundFiring;
trigger libCOMM_gt_LaserDrillBFGBeamSoundFiring;
trigger libCOMM_gt_LaserDrillNukeBeamSoundFiring;
trigger libCOMM_gt_LaserDrillNukeBeamSoundRegionClear;
trigger libCOMM_gt_CM_LaserDrillTopbarOrder;
trigger libCOMM_gt_AdvancedConstructionAutoUser;
trigger libCOMM_gt_AdvancedConstructionAutoAutoCast;
trigger libCOMM_gt_DUT_CommanderTychus;
trigger libCOMM_gt_CM_AbilityTransmissionTychusCreateReaper;
trigger libCOMM_gt_CM_AbilityTransmissionTychusCreateWarhound;
trigger libCOMM_gt_CM_AbilityTransmissionTychusCreateFirebat;
trigger libCOMM_gt_CM_AbilityTransmissionTychusCreateMarauder;
trigger libCOMM_gt_CM_AbilityTransmissionTychusCreateHERC;
trigger libCOMM_gt_CM_AbilityTransmissionTychusCreateGhost;
trigger libCOMM_gt_CM_AbilityTransmissionTychusCreatePhantom;
trigger libCOMM_gt_CM_AbilityTransmissionTychusCreateMedic;
trigger libCOMM_gt_CM_AbilityTransmissionTychusOdinUse;
trigger libCOMM_gt_CM_UnitTransmissionTychusOutlawFirstDeath;
trigger libCOMM_gt_CM_UnitTransmissionTychusOutlawDeath;
trigger libCOMM_gt_CM_UnitTransmissionTychusOutlawRevived;
trigger libCOMM_gt_CM_UnitTransmissionTychusOutlawReviveReminder;
trigger libCOMM_gt_CM_UnitTransmissionTychusOutlawRecruitAvailable;
trigger libCOMM_gt_CM_UnitTransmissionTychusOutlawRecruited;
trigger libCOMM_gt_CM_UnitTransmissionTychusOutlawRecruitReminder;
trigger libCOMM_gt_CC_ScoreTychusGrenadeDmg;
trigger libCOMM_gt_CC_ScoreTychusReaperBombDmg;
trigger libCOMM_gt_CC_ScoreTychusWarhoundTurretDmg;
trigger libCOMM_gt_CC_ScoreTychusFirebatOilDmg;
trigger libCOMM_gt_CC_ScoreTychusHERCImpactDuration;
trigger libCOMM_gt_CC_ScoreTychusMarauderHeal;
trigger libCOMM_gt_CC_ScoreTychusGhostDominatedDmg;
trigger libCOMM_gt_CC_ScoreTychusSpectrePulseDmg;
trigger libCOMM_gt_CC_ScoreTychusMedicHeal;
trigger libCOMM_gt_CC_ScoreTychusMedicHealAoE;
trigger libCOMM_gt_CC_ScoreTychusMedicAbsorb;
trigger libCOMM_gt_CC_ScoreTychusOdinDmg;
trigger libCOMM_gt_CU_TychusSquadSpawnCheat;
trigger libCOMM_gt_CU_TychusSquadMemberTrained;
trigger libCOMM_gt_CU_TychusSquadMemberReviveQueued;
trigger libCOMM_gt_CU_TychusSquadMemberReviveCancelled;
trigger libCOMM_gt_CU_TychusSquadMemberRevived;
trigger libCOMM_gt_CU_TychusSquadMemberDeath;
trigger libCOMM_gt_CU_TychusSquadStructureBuilt;
trigger libCOMM_gt_CU_TychusSquadBarBuilt;
trigger libCOMM_gt_CU_TychusSquadBarDies;
trigger libCOMM_gt_CU_TychusSquadBarUpdateProgress;
trigger libCOMM_gt_CU_TychusEquipmentUpgraded;
trigger libCOMM_gt__CM_TychusEventHook;
trigger libCOMM_gt__CM_TychusStructureEventHook;
trigger libCOMM_gt_CM_TychusHERC_ShieldCooldown;
trigger libCOMM_gt_CM_TychusHERC_CriticalText;
trigger libCOMM_gt_CM_Tychus_OdinSummon_Used;
trigger libCOMM_gt_CM_Tychus_OdinSummon_CameraShake;
trigger libCOMM_gt_CM_Tychus_Odin_Timeout;
trigger libCOMM_gt_CM_Tychus_WarhoundFearApply;
trigger libCOMM_gt_CM_TychusSpecialistTrainingAuraOn;
trigger libCOMM_gt_CM_TychusSpecialistTrainingAuraOff;
trigger libCOMM_gt_CM_AbilityTransmissionTychusTransportUse;
trigger libCOMM_gt_CM_AbilityTransmissionTychusTransportReminder;
trigger libCOMM_gt_CM_UnitTransmissionTychusTransportBuild;
trigger libCOMM_gt_CM_TychusMedicTransportActived;
trigger libCOMM_gt_CM_TychusMedicTopBarButton;
trigger libCOMM_gt_CM_TychusMedicTransportTargetOn;
trigger libCOMM_gt_CM_TychusMedicTransportTargetOff;
trigger libCOMM_gt_CM_TychusMedicTransportStop;
trigger libCOMM_gt_CM_TychusMedicTransportTimeOut;
trigger libCOMM_gt_CM_TychusMedicTransportAirBehaviorApplied;
trigger libCOMM_gt_CM_TychusMedicTransportGroundBehaviorApplied;
trigger libCOMM_gt_CM_TychusMedicTransportTeleportUnload;
trigger libCOMM_gt_CU_TychusMedivacPlatformBuilt;
trigger libCOMM_gt_CU_TychusMedivacAbilityReady;
trigger libCOMM_gt_CU_TychusMedivacAbilityUnready;
trigger libCOMM_gt_CM_Tychus_HeroQueue;
trigger libCOMM_gt_CM_Tychus_HeroCancel;
trigger libCOMM_gt_CM_Tychus_TrainMaxChargesRemove;
trigger libCOMM_gt_CM_Tychus_HeroReviveUsed;
trigger libCOMM_gt_CM_Tychus_HeroReviveFailSafe;
trigger libCOMM_gt_CM_Tychus_OilBombFireDamageResponse;
trigger libCOMM_gt_CM_Tychus_UltimateAchievement;
trigger libCOMM_gt_CM_Tychus_HealAchievement;
trigger libCOMM_gt_CM_Tychus_SnareFailSafe;
trigger libCOMM_gt_CM_Tychus_TriUnitSpeed_Upgrade;
trigger libCOMM_gt_CM_Tychus_TriUnitHealth_Upgrade;
trigger libCOMM_gt_CM_TychusReplaceResearchCenter;
trigger libCOMM_gt_CM_Tychus_Hero_Charge_Timing;
trigger libCOMM_gt_CM_Tychus_CalldownOdinDeselect;
trigger libCOMM_gt_CM_Tychus_CalldownOdinUpdateTarget;
trigger libCOMM_gt_CM_Tychus_CalldownOdinTychusSelect;
trigger libCOMM_gt_CM_TychusWarhound_Revive;
trigger libCOMM_gt_CM_TychusHeroPurchaseDummy;
trigger libCOMM_gt_CM_TychusReaper_Revive;
trigger libCOMM_gt_CM_PrestigeTychus_LoneWolfChanged;
trigger libCOMM_gt_DUT_CommanderVorazun;
trigger libCOMM_gt_CC_AchievementVorazunTimeStop;
trigger libCOMM_gt_CM_SoATimeFreezeOn;
trigger libCOMM_gt_CM_SoATimeFreezeCleanup;
trigger libCOMM_gt_CM_AbilityTransmissionVorazunTimeStop;
trigger libCOMM_gt_CC_ScoreVorazunBHManageGroup;
trigger libCOMM_gt_CC_ScoreVorazunBHDmg;
trigger libCOMM_gt_CC_ScoreVorazunCloakDmg;
trigger libCOMM_gt_CM_AchievementVorazunBlackHoleUsed;
trigger libCOMM_gt_MindControlSupplyOn;
trigger libCOMM_gt_MindControlSupplyOff;
trigger libCOMM_gt_CM_MasteryVorazunDarkPylonRadius;
trigger libCOMM_gt_DUT_CommanderZagara;
trigger libCOMM_gt_CM_AbilityTransmissionZagaraRoachDrop;
trigger libCOMM_gt_CC_ScoreZagaraFrenzyDmg;
trigger libCOMM_gt_CC_ScoreZagaraSuicideDmg;
trigger libCOMM_gt_CC_ScoreZagaraBanelingBarrage;
trigger libCOMM_gt_CM_MasteryZagraRoachLifeIncrease;
trigger libCOMM_gt_RoachDropScale;
trigger libCOMM_gt_CM_Zagara_WeaponSwap;
trigger libCOMM_gt_DUT_CommanderZeratul2;
trigger libCOMM_gt_DUT_CommanderZeratul;
trigger libCOMM_gt_DUT_CommanderZeratul3;
trigger libCOMM_gt_CM_ZeratulArtifactUpgrades;
trigger libCOMM_gt_CM_ZeratulArtifactTriggerUpgrades;
trigger libCOMM_gt_CM_ArtifactTransmission_Hint;
trigger libCOMM_gt_CM_ArtifactTransmission_PickedUp;
trigger libCOMM_gt_CM_ArtifactTransmission_ProphecyCast;
trigger libCOMM_gt_CM_ArtifactTransmission_Upgraded;
trigger libCOMM_gt_CM_ArtifactTransmission_SelectAbilityReminder;
trigger libCOMM_gt_CU_ZeratulProphecyReady;
trigger libCOMM_gt_CU_ZeratulProphecyNotReady;
trigger libCOMM_gt_CU_ZeratulArtifactCollected;
trigger libCOMM_gt_CU_ZeratulArtifactUpgraded;
trigger libCOMM_gt_CU_ZeratulArtifactUsed;
trigger libCOMM_gt_CM_Zeratul_Entropic_Spawner;
trigger libCOMM_gt_CM_Zeratul_Devolve;
trigger libCOMM_gt_CM_Zeratul_TransportDropOff;
trigger libCOMM_gt_CM_Zeratul_TransportResetRally;
trigger libCOMM_gt_CM_Zeratul_PurificationNova_Finale;
trigger libCOMM_gt_CM_Zeratul_PurificationNova_Create;
trigger libCOMM_gt_CM_Zeratul_PurificationNova_MainImpact;
trigger libCOMM_gt_CM_ZeratulStasisBeamIssueOrder;
trigger libCOMM_gt_CM_ZeratulStasisBeam;
trigger libCOMM_gt_CM_ZeratulProphecyEventVision;
trigger libCOMM_gt_CM_ZeratulProphecyEventArtifactMissed;
trigger libCOMM_gt_CM_ZeratulProphecyEventArtifactPickedUp;
trigger libCOMM_gt_CM_ZeratulProphecyEventArtifactRevealed;
trigger libCOMM_gt_CM_ZeratulProphecyEventArtifactUsed;
trigger libCOMM_gt_CM_ZeratulProphecyEventProphecyCast;
trigger libCOMM_gt_CM_Zeratul_ProphecyMiss;
trigger libCOMM_gt_CM_Zeratul_ProphecyCastStop;
trigger libCOMM_gt_CM_Zeratul_ProphecyIntroQ;
trigger libCOMM_gt_CM_Zeratul_ProphecyArtifactPickedUp;
trigger libCOMM_gt_CM_Zeratul_ProphecyArtifactRevealed;
trigger libCOMM_gt_CM_Zeratul_ProphecyArtifactPathingSafety;
trigger libCOMM_gt_CM_ZeratulTopBarWarpTrainStart;
trigger libCOMM_gt_CM_ZeratulTopBarWarpTrainFinish;
trigger libCOMM_gt_CM_ZeratulTopBarRallySet;
trigger libCOMM_gt_CM_ZeratulTopBarRallyRedirect;
trigger libCOMM_gt_CM_ZeratulTopBarRallyCancel;
trigger libCOMM_gt_CM_Zeratul_Trade;
trigger libCOMM_gt_CM_Zeratul_Trade_FullEnergyOn;
trigger libCOMM_gt_CM_Zeratul_Trade_FullEnergyOff;
trigger libCOMM_gt_CM_Zeratul_AutomatedAssimilatorAutoBuild;
trigger libCOMM_gt_CM_Zeratul_ReflectionShield;
trigger libCOMM_gt_CM_Zeratul_DarkTemplarRetreat;
trigger libCOMM_gt_CM_Zeratul_WarpPrismAutoUnload;
trigger libCOMM_gt_CM_Zeratul_WarpPrismAutoUnloadOff;
trigger libCOMM_gt_CM_Zeratul_WarpPrismSelectRift;
trigger libCOMM_gt_CM_Zeratul_WarpPrismMorphUnloadState;
trigger libCOMM_gt_CM_Zeratul_Projection_UnitLink;
trigger libCOMM_gt_CM_Zeratul_Projection_TimedLifeFate;
trigger libCOMM_gt_CM_Zeratul_Projection_Cancel;
trigger libCOMM_gt_CC_ScoreZeratulDmg;
trigger libCOMM_gt_CC_ScoreZeratulShieldRestore;
trigger libCOMM_gt_CM_Zeratul_DevolveKills;
trigger libCOMM_gt_CM_Zeratul_ArtifactRush;
trigger libCOMM_gt_CM_ZeratulAvatarMinimapIcon;
trigger libCOMM_gt_CM_Zeratul_StasisDuration;
trigger libCOMM_gt_CM_Zeratul_RallySetToZeratul;
trigger libCOMM_gt_StartingLarva;
trigger libCOMM_gt_StartingCreepAndLarva1;
trigger libCOMM_gt_StartingCreepAndLarva2;
trigger libCOMM_gt_InitializeUED;
trigger libCOMM_gt_InitializeDragons;
trigger libCOMM_gt_InitializeHybrids;
trigger libCOMM_gt_InitializeKeiron;
trigger libCOMM_gt_KeironUpgrades;
trigger libCOMM_gt_KeironAutoAperture;
trigger libCOMM_gt_AegisDied;
trigger libCOMM_gt_AegisCreated;

// Library Initialization
void libCOMM_InitVariables ();

