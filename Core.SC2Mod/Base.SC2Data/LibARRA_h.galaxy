include "TriggerLibs/natives"

//--------------------------------------------------------------------------------------------------
// Library: LIB
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libARRA_ge_ListenerType_Task = 0;
const int libARRA_ge_ListenerType_Tracker = 1;
const int libARRA_ge_Priority_AVOID = 0;
const int libARRA_ge_Priority_LOW = 1;
const int libARRA_ge_Priority_MEDIUM = 2;
const int libARRA_ge_Priority_HIGH = 3;
const int libARRA_ge_Priority_CRITICAL = 4;

// Constants
const string libARRA_gv_nPCALLY = "NPC-ALLY";
const string libARRA_gv_nPCENEMY = "NPC-ENEMY";
const string libARRA_gv_nPCNEUTRAL = "NPC-NEUTRAL";
const string libARRA_gv_nPCBONUS = "NPC-BONUS";
const string libARRA_gv_nPCHOSTILE = "NPC-HOSTILE";
const int libARRA_gv_stateUnitialized = 0;
const int libARRA_gv_stateActive = 2;
const int libARRA_gv_stateUndiscovered = 1;
const int libARRA_gv_stateCompleted = 3;
const int libARRA_gv_stateFailed = 4;
const int libARRA_gv_stateEnded = 5;

// Variable Declarations
int libARRA_gv_tasksCreated;
int libARRA_gv_global;
int libARRA_gv_mission;
int libARRA_gv_amon;
int libARRA_gv_task;
int libARRA_gv_parent;
int libARRA_gv_eventListenersCreated;
int libARRA_gv_listener;
string libARRA_gv_emittedEvent;
int libARRA_gv_emittedTask;
int libARRA_gv_emittedTracker;
string libARRA_gv_emittedMessage;
string libARRA_gv_pERIODICEVENTS;
trigger libARRA_gv_pickedPeridocEventTrigger;
int libARRA_gv_periodicEventsCreated;
int libARRA_gv_triggeringPeriodicEvent;
trigger libARRA_gv_taskTimeoutTrigger;
fixed libARRA_gv_taskTimeoutDelay;
string libARRA_gv_tIMERTRACKERSLIST;
int libARRA_gv_timerTrackersCreated;
unitgroup libARRA_gv_pickedUnits;
point libARRA_gv_pickedPoint;
fixed libARRA_gv_pickedPrecision;
int libARRA_gv_tracker;
int libARRA_gv_unitTrackersCreated;
string libARRA_gv_tRACKERS;
string libARRA_gv_lOG;

// Function Declarations
unit libARRA_gf_LowestVitalityUnitfromUnitGroup (unitgroup lp_canidates);
bool libARRA_gf_AnyUnitOfPlayerGroupInRegion (playergroup lp_playergroup, region lp_region);
bool libARRA_gf_AllUnitsFromUnitGroupInRegion (unitgroup lp_units, region lp_region);
int libARRA_gf_HookUpDialogItemandshowforplayers (string lp_name, int lp_type, int lp_parent, playergroup lp_players);
bool libARRA_gf_IIF13 (int lp_condition);
point libARRA_gf_IIF7 (point lp_iF, point lp_eLSE);
region libARRA_gf_IIF11 (region lp_iF, region lp_eLSE);
int libARRA_gf_IIF8 (int lp_iF, int lp_eLSE);
string libARRA_gf_IIF4 (string lp_iF, string lp_eLSE);
unit libARRA_gf_IIF6 (unit lp_iF, unit lp_eLSE);
string libARRA_gf_IIF5 (string lp_iF, string lp_iF2);
string libARRA_gf_IIF12 (bool lp_condition, string lp_iF, string lp_iF2);
string libARRA_gf_IIF (bool lp_condition, string lp_iF, string lp_eLSE);
string libARRA_gf_IIF10 (int lp_condition, string lp_iF, string lp_eLSE);
int libARRA_gf_IIF2 (bool lp_condition, int lp_iF, int lp_eLSE);
int libARRA_gf_IIF9 (int lp_condition, int lp_iF, int lp_eLSE);
string libARRA_gf_IIF3 (bool lp_condition, string lp_iF, string lp_eLSE);
region libARRA_gf_ListRegionGet (string lp_list, int lp_index);
int libARRA_gf_ListRegionIndexOf (string lp_list, region lp_value);
bool libARRA_gf_ListRegionIncludes (string lp_list, region lp_value);
void libARRA_gf_ListRegionPush (string lp_list, region lp_value);
void libARRA_gf_ListRegionSet (string lp_list, int lp_index, region lp_value);
void libARRA_gf_ListRegionInclude (string lp_list, region lp_value);
void libARRA_gf_ListRegionInsertAt (string lp_list, int lp_index, region lp_value);
void libARRA_gf_ListRegionRemoveAt (string lp_list, int lp_index);
void libARRA_gf_ListRegionExclude (string lp_list, region lp_value);
void libARRA_gf_MapRegionSet (string lp_unit, string lp_index, region lp_actor);
region libARRA_gf_MapRegionGet (string lp_unit, string lp_index);
string libARRA_gf_MapRegionIndexes (string lp_unit);
bool libARRA_gf_MapRegionIncludes (string lp_unit, string lp_index);
void libARRA_gf_MapRevealerSet (string lp_unit, string lp_index, revealer lp_actor);
revealer libARRA_gf_MapRevealerGet (string lp_unit, string lp_index);
string libARRA_gf_MapRevealerIndexes (string lp_unit);
bool libARRA_gf_MapRevealerIncludes (string lp_unit, string lp_index);
string libARRA_gf_MapPingIndexes (string lp_unit);
void libARRA_gf_MapPingSet (string lp_unit, string lp_index, int lp_actor);
int libARRA_gf_MapPingGet (string lp_unit, string lp_index);
bool libARRA_gf_MapPingIncludes (string lp_unit, string lp_index);
void libARRA_gf_MapActorSet (string lp_unit, string lp_index, actor lp_actor);
actor libARRA_gf_MapActorGet (string lp_unit, string lp_index);
string libARRA_gf_MapActorIndexes (string lp_unit);
bool libARRA_gf_MapActorIncludes (string lp_unit, string lp_index);
void libARRA_gf_MapUnitSet (string lp_map, string lp_index, unit lp_actor);
unit libARRA_gf_MapUnitGet (string lp_map, string lp_index);
string libARRA_gf_MapUnitIndexes (string lp_unit);
bool libARRA_gf_MapUnitIncludes (string lp_unit, string lp_index);
unitgroup libARRA_gf_ListUnitGroupGet (string lp_list, int lp_index);
int libARRA_gf_ListUnitGroupIndexOf (string lp_list, unitgroup lp_value);
bool libARRA_gf_ListUnitGroupIncludes (string lp_list, unitgroup lp_value);
void libARRA_gf_ListUnitGroupPush (string lp_list, unitgroup lp_value);
void libARRA_gf_ListUnitGroupSet (string lp_list, int lp_index, unitgroup lp_value);
void libARRA_gf_ListUnitGroupInclude (string lp_list, unitgroup lp_value);
void libARRA_gf_ListUnitGroupInsertAt (string lp_list, int lp_index, unitgroup lp_value);
void libARRA_gf_ListUnitGroupRemoveAt (string lp_list, int lp_index);
void libARRA_gf_ListUnitGroupExclude (string lp_list, unitgroup lp_value);
void libARRA_gf_MapUnitGroupSet (string lp_map, string lp_index, unitgroup lp_actor);
unitgroup libARRA_gf_MapUnitGroupGet (string lp_map, string lp_index);
string libARRA_gf_MapUnitGroupIndexes (string lp_unit);
bool libARRA_gf_MapUnitGroupIncludes (string lp_unit, string lp_index);
void libARRA_gf_MapTimerSet (string lp_map, string lp_index, timer lp_actor);
timer libARRA_gf_MapTimerGet (string lp_map, string lp_index);
string libARRA_gf_MapTimerIndexes (string lp_unit);
bool libARRA_gf_MapTimerIncludes (string lp_unit, string lp_index);
void libARRA_gf_MapTriggerSet (string lp_map, string lp_index, trigger lp_actor);
trigger libARRA_gf_MapTriggerGet (string lp_map, string lp_index);
string libARRA_gf_MapTriggerIndexes (string lp_unit);
bool libARRA_gf_MapTriggerIncludes (string lp_unit, string lp_index);
void libARRA_gf_MapObjectiveSet (string lp_map, string lp_index, int lp_actor);
int libARRA_gf_MapObjectiveGet (string lp_map, string lp_index);
string libARRA_gf_MapObjectiveIndexes (string lp_unit);
bool libARRA_gf_MapObjectiveIncludes (string lp_unit, string lp_index);
void libARRA_gf_MapTextSet (string lp_map, string lp_index, text lp_actor);
text libARRA_gf_MapTextGet (string lp_map, string lp_index);
string libARRA_gf_MapTextIndexes (string lp_unit);
bool libARRA_gf_MapTextIncludes (string lp_unit, string lp_index);
fixed libARRA_gf_ListRealGet (string lp_list, int lp_index);
int libARRA_gf_ListRealIndexOf (string lp_list, fixed lp_value);
bool libARRA_gf_ListRealIncludes (string lp_list, fixed lp_value);
void libARRA_gf_ListRealSet (string lp_list, int lp_index, fixed lp_value);
void libARRA_gf_ListRealPush (string lp_list, fixed lp_value);
void libARRA_gf_ListRealInclude (string lp_list, fixed lp_value);
void libARRA_gf_ListRealInsertAt (string lp_list, int lp_index, fixed lp_value);
void libARRA_gf_ListRealRemoveAt (string lp_list, int lp_index);
void libARRA_gf_ListRealExclude (string lp_list, fixed lp_value);
void libARRA_gf_MapRealSet (string lp_map, string lp_index, fixed lp_actor);
fixed libARRA_gf_MapRealGet (string lp_map, string lp_index);
string libARRA_gf_MapRealIndexes (string lp_unit);
bool libARRA_gf_MapRealIncludes (string lp_unit, string lp_index);
void libARRA_gf_ListCreate (string lp_list);
void libARRA_gf_ListDestroy (string lp_list);
void libARRA_gf_ListClear (string lp_list);
void libARRA_gf_ListPopBack (string lp_list);
int libARRA_gf_ListSize (string lp_list);
bool libARRA_gf_ListIsEmpty (string lp_list);
string libARRA_gf_ListGetDatabaseName (string lp_arrayName, int lp_index);
void libARRA_gf_ListCreateIfNotExists (string lp_list);
void libARRA_gf_ListIntCopy (string lp_source, string lp_target);
int libARRA_gf_ListIntGet (string lp_list, int lp_index);
int libARRA_gf_ListIntIndexOf (string lp_list, int lp_value);
bool libARRA_gf_ListIntIncludes (string lp_list, int lp_value);
void libARRA_gf_ListIntSet (string lp_list, int lp_index, int lp_value);
void libARRA_gf_ListIntPush (string lp_list, int lp_value);
void libARRA_gf_ListIntInclude (string lp_list, int lp_value);
void libARRA_gf_ListIntInsertAt (string lp_list, int lp_index, int lp_value);
void libARRA_gf_ListIntRemoveAt (string lp_list, int lp_index);
void libARRA_gf_ListIntExclude (string lp_list, int lp_value);
void libARRA_gf_MapIntSet (string lp_map, string lp_index, int lp_actor);
int libARRA_gf_MapIntGet (string lp_map, string lp_index);
string libARRA_gf_MapIntIndexes (string lp_unit);
bool libARRA_gf_MapIntIncludes (string lp_unit, string lp_index);
void libARRA_gf_ListStringCopy (string lp_source, string lp_target);
string libARRA_gf_ListStringGet (string lp_list, int lp_index);
int libARRA_gf_ListStringIndexOf (string lp_list, string lp_value);
bool libARRA_gf_ListStringIncludes (string lp_list, string lp_value);
void libARRA_gf_ListStringSet (string lp_list, int lp_index, string lp_value);
void libARRA_gf_ListStringPush (string lp_list, string lp_addedValue);
void libARRA_gf_ListStringInclude (string lp_list, string lp_addedValue);
void libARRA_gf_ListStringInsertAt (string lp_list, int lp_index, string lp_value);
void libARRA_gf_ListStringRemoveAt (string lp_list, int lp_index);
void libARRA_gf_ListStringExclude (string lp_list, string lp_value);
void libARRA_gf_MapStringSet (string lp_map, string lp_index, string lp_actor);
string libARRA_gf_MapStringGet (string lp_map, string lp_index);
string libARRA_gf_MapStringIndexes (string lp_unit);
bool libARRA_gf_MapStringIncludes (string lp_unit, string lp_index);
abilcmd libARRA_gf_ListAbilCmdGet (string lp_list, int lp_index);
int libARRA_gf_ListAbilCmdIndexOf (string lp_list, abilcmd lp_value);
bool libARRA_gf_ListAbilCmdIncludes (string lp_list, abilcmd lp_value);
void libARRA_gf_ListAbilCmdSet (string lp_list, int lp_index, abilcmd lp_value);
void libARRA_gf_ListAbilCmdPush (string lp_list, abilcmd lp_value);
void libARRA_gf_ListAbilCmdInclude (string lp_list, abilcmd lp_value);
void libARRA_gf_ListAbilCmdInsertAt (string lp_list, int lp_index, abilcmd lp_value);
void libARRA_gf_ListAbilCmdRemoveAt (string lp_list, int lp_index);
void libARRA_gf_ListAbilCmdExclude (string lp_list, abilcmd lp_value);
point libARRA_gf_ListPointGet (string lp_list, int lp_index);
int libARRA_gf_ListPointIndexOf (string lp_list, point lp_value);
bool libARRA_gf_ListPointIncludes (string lp_list, point lp_value);
void libARRA_gf_ListPointSet (string lp_list, int lp_index, point lp_value);
void libARRA_gf_ListPointPush (string lp_list, point lp_addedValue);
void libARRA_gf_ListPointInclude (string lp_list, point lp_value);
void libARRA_gf_ListPointInsertAt (string lp_list, int lp_index, point lp_value);
void libARRA_gf_ListPointRemoveAt (string lp_list, int lp_index);
void libARRA_gf_ListPointExclude (string lp_list, point lp_value);
void libARRA_gf_MapPointSet (string lp_unit, string lp_index, point lp_actor);
point libARRA_gf_MapPointGet (string lp_unit, string lp_index);
string libARRA_gf_MapPointIndexes (string lp_unit);
bool libARRA_gf_MapPointIncludes (string lp_unit, string lp_index);
void libARRA_gf_LOGTask (int lp_task);
string libARRA_gf_TaskToString (int lp_task);
void libARRA_gf_SetTriggeringTask (int lp_task);
void libARRA_gf_CreateTask (string lp_id);
void libARRA_gf_TaskRun (int lp_task, trigger lp_trigger, bool lp_wait);
void libARRA_gf_TaskIncrementValue (int lp_task, string lp_index);
void libARRA_gf_TaskIncreaseValueInt (int lp_task, string lp_index, int lp_value);
void libARRA_gf_TaskIncreaseValueReal (int lp_task, string lp_index, fixed lp_value);
string libARRA_gf_TaskType (int lp_task);
int libARRA_gf_TaskParent (int lp_task);
int libARRA_gf_TaskTeam (int lp_task);
int libARRA_gf_TaskState (int lp_task);
bool libARRA_gf_TaskActive (int lp_task);
void libARRA_gf_TaskStart (int lp_task);
void libARRA_gf_TaskComplete (int lp_task);
void libARRA_gf_TaskFail (int lp_task);
void libARRA_gf_TaskIncreaseProgress (int lp_task);
void libARRA_gf_TaskIncreaseFail (int lp_task);
void libARRA_gf_TaskIncreaseGoal (int lp_task);
int libARRA_gf_TaskGoal (int lp_task);
int libARRA_gf_TaskProgress (int lp_task);
int libARRA_gf_TaskFails (int lp_task);
void libARRA_gf_TaskUpdateObjective (int lp_task);
text libARRA_gf_TaskObjectiveText (int lp_objective2);
void libARRA_gf_TaskObjective (int lp_task, string lp_objective, bool lp_objectiveType);
void libARRA_gf_ListernerCreate (int lp_subscriber, int lp_observableType, int lp_observable, string lp_event, trigger lp_trigger);
void libARRA_gf_ListenerOff (int lp_listener);
void libARRA_gf_ListenerOn (int lp_listener);
string libARRA_gf_EventListenerstoString (string lp_eventString);
string libARRA_gf_GetMessageParameter (string lp_index);
void libARRA_gf_TrackerEmit (int lp_tracker, string lp_event, string lp_message);
void libARRA_gf_TaskEmit (int lp_task, string lp_event, string lp_message);
void libARRA_gf_Emit (int lp_task, int lp_type, string lp_event, string lp_message);
void libARRA_gf_TaskOnTask (int lp_thisTask, int lp_observableTask, string lp_event, trigger lp_trigger);
void libARRA_gf_TaskOnTracker (int lp_thisTask, int lp_observableTracker, string lp_event, trigger lp_trigger);
void libARRA_gf_TaskOn (int lp_thisTask, string lp_event, trigger lp_trigger);
void libARRA_gf_RunMissionVictorySequence4 (int lp_task, fixed lp_period, trigger lp_trigger);
void libARRA_gf_RunMissionVictorySequence5 (int lp_periodic);
int libARRA_gf_TriggeringPeriodic ();
void libARRA_gf_RunMissionVictorySequence6 (int lp_task, fixed lp_delay, trigger lp_trigger);
void libARRA_gf_RunMissionVictorySequence7 (int lp_task, fixed lp_delay, trigger lp_completeTrigger);
void libARRA_gf_TaskTimer (int lp_task, string lp_index, fixed lp_delay, trigger lp_trigger);
void libARRA_gf_TaskAttackWaves (int lp_task, fixed lp_delayMinutes, string lp_routes);
void libARRA_gf_TaskAttackWave (int lp_task, unit lp_tARGET, string lp_rOUTES, int lp_sIZE, int lp_tECH, int lp_tYPE);
unit libARRA_gf_RandomPriorityTarget ();
string libARRA_gf_BestAttackWaveRoute (string lp_spawns);
void libARRA_gf_Harass (int lp_target, fixed lp_delay, int lp_size, int lp_tech, string lp_routes);
void libARRA_gf_TaskSetPriorityTarget (int lp_task, unit lp_unit, int lp_priority);
void libARRA_gf_TaskSetPriorityTargets (int lp_task, unitgroup lp_units, int lp_priority);
unit libARRA_gf_TaskGetPriorityTarget (int lp_task, int lp_target);
void libARRA_gf_TrackerCreateUnit (unit lp_unit, string lp_id);
void libARRA_gf_TrackerCreate (unitgroup lp_units, string lp_id);
void libARRA_gf_TaskEmergency (int lp_task, region lp_region, trigger lp_trigger);
void libARRA_gf_TaskDestroyPings (int lp_task);
void libARRA_gf_TaskCreateRevealers (int lp_task, playergroup lp_players, region lp_region);
void libARRA_gf_TaskDestroyRevealers (int lp_task);
void libARRA_gf_TaskCleanUp (int lp_task);
string libARRA_gf_StringForTask (int lp_unit, string lp_index);
fixed libARRA_gf_RealForTask (int lp_unit, string lp_index);
int libARRA_gf_IntegerForTask (int lp_unit, string lp_index);
region libARRA_gf_RegionForTask (int lp_unit, string lp_index);
text libARRA_gf_TextForTask (int lp_unit, string lp_index);
unit libARRA_gf_UnitForTask (int lp_unit, string lp_index);
actor libARRA_gf_ActorForTask (int lp_unit, string lp_index);
point libARRA_gf_PointStoredForTask (int lp_unit, string lp_index);
int libARRA_gf_PingStoredForTask (int lp_unit, string lp_index);
revealer libARRA_gf_RevealerStoredForTask (int lp_unit, string lp_index);
unitgroup libARRA_gf_UnitGroupStoredForTask (int lp_unit, string lp_index);
trigger libARRA_gf_TriggerStoredForTask (int lp_unit, string lp_index);
int libARRA_gf_ObjectiveStoredForTask (int lp_unit, string lp_index);
timer libARRA_gf_TimerStoredForTask (int lp_unit, string lp_index);
string libARRA_gf_StringForTask2 (int lp_unit, string lp_index);
fixed libARRA_gf_RealForTask2 (int lp_unit, string lp_index);
int libARRA_gf_IntegerForTask2 (int lp_unit, string lp_index);
region libARRA_gf_RegionForTask2 (int lp_unit, string lp_index);
text libARRA_gf_TextForTask2 (int lp_unit, string lp_index);
unit libARRA_gf_UnitForTask2 (int lp_unit, string lp_index);
actor libARRA_gf_ActorForTask2 (int lp_unit, string lp_index);
point libARRA_gf_PointStoredForTask2 (int lp_unit, string lp_index);
int libARRA_gf_PingStoredForTask2 (int lp_unit, string lp_index);
revealer libARRA_gf_RevealerStoredForTask2 (int lp_unit, string lp_index);
unitgroup libARRA_gf_UnitGroupStoredForTask2 (int lp_unit, string lp_index);
trigger libARRA_gf_TriggerStoredForTask2 (int lp_unit, string lp_index);
int libARRA_gf_ObjectiveStoredForTask2 (int lp_unit, string lp_index);
timer libARRA_gf_TimerStoredForTask2 (int lp_unit, string lp_index);
void libARRA_gf_StoreStringForTask (int lp_unit, string lp_index, string lp_actor);
void libARRA_gf_StoreRealForTask (int lp_unit, string lp_index, fixed lp_actor);
void libARRA_gf_StoreIntegerForTask (int lp_unit, string lp_index, int lp_actor);
void libARRA_gf_StoreRegionForTask (int lp_unit, string lp_index, region lp_actor);
void libARRA_gf_StoreTextForTask (int lp_unit, string lp_index, text lp_actor);
void libARRA_gf_StoreUnitForTask (int lp_task, string lp_index, unit lp_unit);
void libARRA_gf_StoreActorForTask (int lp_unit, string lp_index, actor lp_actor);
void libARRA_gf_StorePointForTask (int lp_unit, string lp_index, point lp_point);
void libARRA_gf_StorePingForTask (int lp_unit, string lp_index, int lp_ping);
void libARRA_gf_StoreRevealerForTask (int lp_unit, string lp_index, revealer lp_ping);
void libARRA_gf_StoreUnitGroupForTask (int lp_task, string lp_index, unitgroup lp_actor);
void libARRA_gf_StoreTriggerForTask (int lp_task, string lp_index, trigger lp_actor);
void libARRA_gf_StoreObjectiveForTask (int lp_task, string lp_index, int lp_actor);
void libARRA_gf_StoreObjectiveForTask2 (int lp_task, string lp_index, timer lp_timer);
void libARRA_gf_LOGPoint (point lp_value);
void libARRA_gf_LOGString (string lp_value);
void libARRA_gf_LOGAbilCmd (abilcmd lp_lOG);
void libARRA_gf_LOGInteger (int lp_lOG);
void libARRA_gf_LOGUpgrade (string lp_lOG);
void libARRA_gf_LOGUnit (string lp_lOG);
void libARRA_gf_LOGUnitGroup (unitgroup lp_lOG);
void libARRA_gf_LOGReal (fixed lp_lOG);
void libARRA_gf_LOGTrigger (trigger lp_lOG);
void libARRA_gf_LOGListInt (string lp_list);
void libARRA_gf_LOGListString (string lp_list);
void libARRA_gf_LOGListAbilCmd (string lp_list);
void libARRA_gf_LOGListPoint (string lp_list);

// Trigger Declarations
trigger libARRA_gt_TaskFail;
trigger libARRA_gt_TaskComplete;
trigger libARRA_gt_TaskStart;
trigger libARRA_gt_TaskIncreaseProgress;
trigger libARRA_gt_TaskIncreaseFail;
trigger libARRA_gt_UpdateObjective;
trigger libARRA_gt_CreatePeridocEvent;
trigger libARRA_gt_TaskTimeoutTrigger;
trigger libARRA_gt_TrackerTimerExpired;
trigger libARRA_gt_AttacksController;
trigger libARRA_gt_BaseTargetAttack;
trigger libARRA_gt_AttackDefaultVOResponse;
trigger libARRA_gt_DefaultMissionWavesTechProgression;
trigger libARRA_gt_DefaultMissionWavesSizeProgression;
trigger libARRA_gt_PriorityTargetAttack;
trigger libARRA_gt_SendUnitsToPoint;
trigger libARRA_gt_TrackerUnitDies;
trigger libARRA_gt_TrackerUnitDamaged;
trigger libARRA_gt_CheckEmergencyStartRegion;

// Library Initialization
void libARRA_InitVariables ();

